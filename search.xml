<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>给外观党换一个极简终端 Alacritty + 美化</title>
    <url>/2023/04/Alacritty.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h2><blockquote>
<p>Alacritty 是一款 快速、跨平台的 OpenGL 终端仿真器，具有合理的默认设置，但允许进行广泛的配置。通过与其他应用程序集成，而不是重新实现它们的功能，它成功地提供了一组灵活的功能，并具有高性能。目前支持的平台包括 BSD、Linux、macOS 和 Windows。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">github 地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Alacritty</td>
<td align="left"><a href="https://github.com/alacritty/alacritty">https://github.com/alacritty/alacritty</a></td>
</tr>
</tbody></table>
<ul>
<li>下载地址：<a href="https://github.com/alacritty/alacritty/releases">alacritty</a></li>
</ul>
<h2 id="美化效果"><a href="#美化效果" class="headerlink" title="美化效果"></a><strong>美化效果</strong></h2><p>Alacritty (窗口)</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261410570.webp"></p>
<p>Alacritty (图标)</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261410571.webp"></p>
<ul>
<li>再看看自带的</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261410572.webp"></p>
<hr>
<p><strong>要完成上面的效果只需要三步</strong></p>
<h3 id="美化字体"><a href="#美化字体" class="headerlink" title="美化字体"></a><strong>美化字体</strong></h3><ul>
<li>JetBrains Mono：面向开发人员的免费开源字体</li>
</ul>
<table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">jetbrains</td>
<td align="left"><a href="https://www.jetbrains.com/lp/mono/">https://www.jetbrains.com/lp/mono/</a></td>
</tr>
</tbody></table>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261410573.webp"></p>
<hr>
<h3 id="美化图标"><a href="#美化图标" class="headerlink" title="美化图标"></a><strong>美化图标</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261410574.webp"></p>
<blockquote>
<p>mac 端在应用文件夹中找到<code> Alacritty.app</code> ，右键显示简介，然后将下载的 icns 文件拖动到左上角图标上，完成替换</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Alacritty</td>
<td align="left"><a href="https://geek.4everland.store/Alacritty.icns">点击下载</a></td>
</tr>
</tbody></table>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a><strong>配置文件</strong></h3><h4 id="1、在线更新"><a href="#1、在线更新" class="headerlink" title="1、在线更新"></a><strong>1、在线更新</strong></h4><ul>
<li>在 Alacritty 运行下面的命令，重启即可。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fLo ~/.config/alacritty/alacritty.yml --create-dir \</span><br><span class="line">    https://geek.4everland.store/alacritty.yml</span><br></pre></td></tr></table></figure>

<h4 id="2、或下载配置文件"><a href="#2、或下载配置文件" class="headerlink" title="2、或下载配置文件"></a><strong>2、或下载配置文件</strong></h4><ul>
<li>Mac 下放到 ~&#x2F;.config&#x2F;alacritty&#x2F;alacritty.yml</li>
</ul>
<table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">alacritty</td>
<td align="left"><a href="https://geek.4everland.store/alacritty.yml">点击下载</a></td>
</tr>
</tbody></table>
<hr>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>App</tag>
      </tags>
  </entry>
  <entry>
    <title>Amazing-QR 只需四步制作一个炫酷二维码</title>
    <url>/2023/04/AmazingQR.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>标题</th>
<th>项目地址</th>
</tr>
</thead>
<tbody><tr>
<td>Amazing-QR</td>
<td><a href="https://github.com/x-hw/amazing-qr">https://github.com/x-hw/amazing-qr</a></td>
</tr>
</tbody></table>
<ul>
<li>Amazing QR，是一款开源的 Python 应用程序，用于生成炫酷的二维码图像和动态 GIF 图片<blockquote>
<p>可生成普通二维码、带图片的艺术二维码（黑白与彩色）、动态二维码（黑白与彩色）</p>
</blockquote>
</li>
</ul>
<p class="flex">
  <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251959955.gif" alt="图片描述" width="200" height="200" />
  <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251959957.gif" alt="图片描述" width="200" height="200" />
    <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251959958.gif" alt="图片描述" width="200" height="200" />
        <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251959959.gif" alt="图片描述" width="200" height="200" />  
  <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251959794.gif" alt="图片描述" width="200" height="200" />



<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251958362.webp" alt="6"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251958469.webp" alt="7"></p>
<hr>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="生成普通-QR-码"><a href="#生成普通-QR-码" class="headerlink" title="生成普通 QR 码"></a>生成普通 QR 码</h4><h5 id="使用虚拟环境-推荐"><a href="#使用虚拟环境-推荐" class="headerlink" title="使用虚拟环境 (推荐)"></a>使用虚拟环境 (推荐)</h5><blockquote>
<p>在虚拟环境中安装并运行 amzqr，可以确保使用的是正确的 Python 解释器和模块安装路径。</p>
</blockquote>
<p>首先，打开终端，创建一个新的虚拟环境：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m venv myenv</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251958785.webp" alt="8"></p>
<h5 id="激活虚拟环境："><a href="#激活虚拟环境：" class="headerlink" title="激活虚拟环境："></a>激活虚拟环境：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source myenv/bin/activate</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251958003.webp" alt="9"></p>
<h5 id="使用-pip-安装-amzqr"><a href="#使用-pip-安装-amzqr" class="headerlink" title="使用 pip 安装 amzqr"></a>使用 pip 安装 amzqr</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install amzqr</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251954475.webp" alt="1-1"></p>
<h5 id="命令运行-amzqr"><a href="#命令运行-amzqr" class="headerlink" title="命令运行 amzqr"></a>命令运行 <code>amzqr</code></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">amzqr https://github.com</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251958190.webp" alt="11"></p>
<p>🎉完成！</p>
<p><code>/Users/geek/qrcode.png</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251958993.webp" alt="12"></p>
<hr>
<h4 id="成生艺术二维码"><a href="#成生艺术二维码" class="headerlink" title="成生艺术二维码"></a>成生艺术二维码</h4><h5 id="黑白图片"><a href="#黑白图片" class="headerlink" title="黑白图片"></a>黑白图片</h5><blockquote>
<p>参数-p 用来将 QR 二维码图像与一张同目录下的图片相结合，产生一张黑白图片。我是将头像放入 qr 文件夹</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">amzqr https://x.geekbb.ml -p /Users/geek/qr/qr.jpg</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251958001.webp" alt="13"></p>
<h5 id="彩色图片"><a href="#彩色图片" class="headerlink" title="彩色图片"></a>彩色图片</h5><blockquote>
<p>加上参数 -c 可以使产生的图片由黑白变为彩色的。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">amzqr https://x.geekbb.ml -p /Users/geek/qr/qr.jpg -c -con 1.5 -bri 1.6</span><br></pre></td></tr></table></figure>
<ul>
<li>参数-con 用以调节图片的对比度，1.0 表示原始图片，更小的值表示更低对比度，更大反之。默认为 1.0。</li>
<li>参数 -bri 用来调节图片的亮度，其余用法和取值与 -con 相同。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251959449.webp" alt="14"></p>
<h5 id="GIF-图片"><a href="#GIF-图片" class="headerlink" title="GIF 图片"></a>GIF 图片</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">amzqr https://x.geekbb.ml -p /Users/geek/qr/qr.gif -c -con 1.5 -bri 1.6</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251959794.gif" alt="15"></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>二维码</tag>
      </tags>
  </entry>
  <entry>
    <title>本地化部署解锁 Next Level AI 对话体验 Chat Chat</title>
    <url>/2023/05/ChatChat.html</url>
    <content><![CDATA[<blockquote>
<p>Chat Chat，解锁你的下一级 AI 对话体验。在这里，你可以使用 OpenAI、微软 Azure、Claude、Cohere、Hugging Face 等多个 API，让你的 AI 对话体验更加丰富。</p>
</blockquote>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul>
<li><strong>今天喜闻@okisdev 宣布 Chat Chat 开源，个人认为 Chat Chat 的对话体验速度优于 <a href="https://x.geekbb.ml/Github-Chatbot-ui">Chatbot UI</a> ，赶紧操练起来吧</strong></li>
</ul>
<table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">ChatChat</td>
<td align="left"><a href="https://github.com/okisdev/ChatChat">https://github.com/okisdev/ChatChat</a></td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-    TTS</span><br><span class="line">-    与文件聊天</span><br><span class="line">-    支持分享对话</span><br><span class="line">-    支持流信息（SSE）</span><br><span class="line">-    Markdown 格式化</span><br><span class="line">-    支持消息代码语法高亮</span><br><span class="line">-    支持 System Prompt 支持 System Prompt</span><br><span class="line">-    快捷菜单（command + k）</span><br><span class="line">-    聊天记录（本地和云端同步）</span><br><span class="line">-    封装的 API（不再需要代理）</span><br><span class="line">-    支持插件功能（`/search`， `/fetch`）</span><br><span class="line">-    支持 OpenAI, Microsoft Azure, Claude, Cohere, Hugging Face</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261645236.webp"></p>
<h3 id="在线访问"><a href="#在线访问" class="headerlink" title="在线访问"></a>在线访问</h3><p><a href="https://chat.okisdev.com/">Chat Chat — 聊天聊天 (okisdev.com)</a></p>
<h3 id="部署到-Vercel"><a href="#部署到-Vercel" class="headerlink" title="部署到 Vercel"></a>部署到 Vercel</h3><p><a href="https://github.com/okisdev/ChatChat/blob/main/README.zh_CN.mdx">ChatChat</a> 有介绍，一键部署，我就不展开说了</p>
<h3 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h3><h4 id="拉取-ChatChat-代码"><a href="#拉取-ChatChat-代码" class="headerlink" title="拉取 ChatChat 代码"></a>拉取 ChatChat 代码</h4><blockquote>
<p>新建一个文件夹 ChatChat，然后打开“终端”进入此文件夹。<br>输入以下命令将远程 Git 仓库中的代码复制到此文件夹里。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/okisdev/ChatChat.git</span><br></pre></td></tr></table></figure>


<blockquote>
<p>进入刚刚的 ChatChat 文件夹</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ChatChat</span><br></pre></td></tr></table></figure>


<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261645237.webp"></p>
<h4 id="安装-Yarn"><a href="#安装-Yarn" class="headerlink" title="安装 Yarn"></a>安装 Yarn</h4><p>1、使用 npm 安装 nodejs</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>

<p>2、安装好 Node 后，再使用 npm 安装 Yarn。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install yarn</span><br></pre></td></tr></table></figure>

<p>3、安装完成后，可以使用以下命令进行验证 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">varn _-version</span><br></pre></td></tr></table></figure>


<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261645238.webp"></p>
<h4 id="安装-ChatChat-依赖包"><a href="#安装-ChatChat-依赖包" class="headerlink" title="安装 ChatChat 依赖包"></a>安装 ChatChat 依赖包</h4><blockquote>
<p>安装 ChatChat 应用程序所需的依赖包</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn</span><br></pre></td></tr></table></figure>


<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261645239.webp"></p>
<h4 id="启动-ChatChat"><a href="#启动-ChatChat" class="headerlink" title="启动 ChatChat"></a>启动 ChatChat</h4><blockquote>
<p>在本地启动 ChatChat 应用程序</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn dev</span><br></pre></td></tr></table></figure>


<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261645240.webp"></p>
<blockquote>
<p>浏览器打开 <a href="127.0.0.1:3000">127.0.0.1:3000</a> 输入自己的 API 即可</p>
</blockquote>
<p>🤫不保证有效👇</p>
<div class="error">
  <p>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</p>
    <p>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</p>
</div>

<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261645241.webp"></p>
<blockquote>
<p>其它 AI 自行研究</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261645242.webp"></p>
<blockquote>
<p>运行界面</p>
</blockquote>
<p><code>GIF加载中……</code><br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261645243.gif"></p>
<hr>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Github 近期热门 ChatGPT 介绍及特点 (第一期)</title>
    <url>/2023/04/ChatGPTapp1.html</url>
    <content><![CDATA[<p><strong>盖此篇文所言，论当前热门之 Github ChatGPT 开源项目。详加介绍使人能够于短暂光阴內基本掌握其核心体系，藉此提升自身之選擇能力。</strong></p>
<h2 id="Chatbot-ui"><a href="#Chatbot-ui" class="headerlink" title="Chatbot-ui"></a>Chatbot-ui</h2><blockquote>
<p>chatbot-ui 是一个聊天机器人 UI 也是一个高级聊天机器人工具包，可部署在 Vercel，用于在 Chatbot UI Lite 上构建 OpenAI 的聊天模型，使用 Next.js，TypeScript 和 Tailwind CSS。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">主要功能：</span><br><span class="line">提示模板（3/27/23）</span><br><span class="line">重新生成和编辑响应（3/25/23）</span><br><span class="line">文件夹（3/24/23）</span><br><span class="line">搜索聊天内容（3/23/23）</span><br><span class="line">停止消息生成（3/22/23）</span><br><span class="line">导入/导出聊天记录（3/22/23）</span><br><span class="line">自定义系统提示（3/21/23）</span><br><span class="line">错误处理（3/20/23）</span><br><span class="line">GPT-4支持（需要访问）（3/20/23）</span><br><span class="line">搜索对话（3/19/23）</span><br><span class="line">代码语法高亮（3/18/23）</span><br><span class="line">切换侧边栏（3/18/23）</span><br><span class="line">对话命名（3/18/23）</span><br><span class="line">Github风格的标记（3/18/23）</span><br><span class="line">在应用中添加OpenAI API密钥（3/18/23）</span><br><span class="line">Markdown支持（3/17/23）</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>点评：开源 ChatGPT 用户界面，近期更新的右侧自定义提示支持变量，配合“<a href="https://geekbb.xlog.app/fen-xiang-ChatGPT-zi-yong-Prompt-qu-bie-yu-wang-luo-shang-da-duo-shu-lan-tao-lu">ChatGPT 自用 Prompt 区别于网络上大多数烂套路</a>”食用，极大提升我的效率，支持导出话题记录和自定义 Prompt，目前是我的主力。</strong><br>运行界面<br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406529.webp"></li>
</ul>
<p><strong>Github 链接：<a href="https://github.com/mckaywrigley/chatbot-ui">Chatbot-ui</a></strong></p>
<hr>
<h2 id="Chatbox"><a href="#Chatbox" class="headerlink" title="Chatbox"></a>Chatbox</h2><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406545.webp"></p>
<blockquote>
<p>开源的 ChatGPT API (OpenAI API) 桌面客户端，Prompt 的调试与管理工具，支持 Windows、Mac 和 Linux</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">和 ChatGPT Plus 一样快</span><br><span class="line">数据存储在本地，不会丢失</span><br><span class="line">更自由、更强大的 Prompt 能力</span><br><span class="line">支持 GPT-4 和其他模型</span><br><span class="line">支持自定义域名代理</span><br><span class="line">更多功能：Markdown、消息引用、字数与token估算、夜间模式……</span><br><span class="line">符合人体工程学的 UI 设计</span><br><span class="line">提供安装包，无需部署</span><br><span class="line">免费，开源</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>点评：快是真快，期待加入自定义 Prompt。</strong><br>运行界面</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406557.webp"></p>
<p>Github 链接：<a href="https://github.com/Bin-Huang/chatbox">Chatboxi</a></p>
<hr>
<h2 id="ChatGPT-Box"><a href="#ChatGPT-Box" class="headerlink" title="ChatGPT Box"></a>ChatGPT Box</h2><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406569.webp"></p>
<blockquote>
<p>将 ChatGPT 深度集成到浏览器中，你所需要的一切均在于此</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">🌈 在任何页面随时呼出聊天对话框 (Ctrl+B)</span><br><span class="line">📱 支持手机等移动设备</span><br><span class="line">📓 通过右键菜单总结任意页面 (Alt+B)</span><br><span class="line">📖 独立对话页面 (Ctrl+Shift+H)</span><br><span class="line">🔗 多种API支持 (免费用户和Plus用户可用Web API, 此外还有GPT-3.5, GPT-4, NewBing, 自托管支持, Azure等)</span><br><span class="line">📦 对各种常用网站的集成适配 (Reddit, Quora, YouTube, GitHub, GitLab, StackOverflow, Zhihu, Bilibili) (受到wimdenherder启发)</span><br><span class="line">🔍 对所有主流搜索引擎的适配, 并支持自定义查询以支持额外的站点</span><br><span class="line">🧰 框选工具与右键菜单, 执行各种你的需求, 如翻译, 总结, 润色, 情感分析, 段落划分, 代码解释, 问询</span><br><span class="line">🗂️ 静态卡片支持浮出聊天框, 进行多分支对话</span><br><span class="line">🖨️ 随意保存你的完整对话记录, 或进行局部复制</span><br><span class="line">🎨 强大的渲染支持, 不论是代码高亮, 还是复杂数学公式</span><br><span class="line">🌍 多语言偏好支持</span><br><span class="line">📝 自定义API地址支持</span><br><span class="line">⚙️ 所有站点适配与工具均可自由开关, 随时停用你不需要的模块</span><br><span class="line">💡 工具与站点适配开发易于扩展, 对于开发人员易于自定义, 请查看开发&amp;贡献部分</span><br><span class="line">😉 此外, 如果回答有任何不足, 直接聊天解决!</span><br></pre></td></tr></table></figure>
<ul>
<li><p><strong>点评：此神软可代替 chathub，writely，BingGPT，openai-translator！我愿称最强</strong>！<br>运行界面<br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406581.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406594.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406606.webp"></p>
</li>
<li><p><strong>Github 链接：<a href="https://github.com/josStorer/chatGPTBox">ChatGPT Box</a></strong></p>
</li>
</ul>
<hr>
<h2 id="BingGPT"><a href="#BingGPT" class="headerlink" title="BingGPT"></a>BingGPT</h2><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406618.webp"></p>
<blockquote>
<p>新必应人工智能聊天的桌面应用程序</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">与新的必应聊天，无需安装 Microsoft Edge 或浏览器插件</span><br><span class="line">将完整对话导出为 Markdown、PNG 或 PDF</span><br><span class="line">自定义外观（主题和字体大小）</span><br><span class="line">键盘快捷键</span><br><span class="line">多平台</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>点评：反映比 Edge 自带的快，并且稳如老狗</strong><br>运行界面<br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406631.webp"></li>
</ul>
<p><strong>Github 链接：<a href="https://github.com/dice2o/BingGPT">BingGPT</a></strong></p>
<hr>
<h2 id="ChatGPT-Web"><a href="#ChatGPT-Web" class="headerlink" title="ChatGPT Web"></a>ChatGPT Web</h2><blockquote>
<p>支持双模型，提供了两种非官方 ChatGPT API 方法</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[✓] 双模型</span><br><span class="line">[✓] 多会话储存和上下文逻辑</span><br><span class="line">[✓] 对代码等消息类型的格式化美化处理</span><br><span class="line">[✓] 访问权限控制</span><br><span class="line">[✓] 数据导入、导出</span><br><span class="line">[✓] 保存消息到本地图片</span><br><span class="line">[✓] 界面多语言</span><br><span class="line">[✓] 界面主题</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>点评：部署在 docker 超方便，接入我国内亲朋使用</strong></li>
</ul>
<p>  <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406644.webp"></p>
<p>  <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251406656.webp"></p>
<p><strong>Github 链接：<a href="https://github.com/Chanzhaoyu/chatgpt-web">Chatgpt-web</a></strong></p>
<hr>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
      </tags>
  </entry>
  <entry>
    <title>Github 近期热门 ChatGPT 介绍及特点 (第二期)</title>
    <url>/2023/04/ChatGPTapp2.html</url>
    <content><![CDATA[<p><strong>盖此篇文所言，论当前热门之 Github ChatGPT 开源项目。详加介绍使人能够于短暂光阴內基本掌握其核心体系，藉此提升自身之選擇能力。</strong></p>
<h2 id="Writely"><a href="#Writely" class="headerlink" title="Writely"></a><a href="https://github.com/anc95/writely">Writely</a></h2><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251429131.webp"></p>
<blockquote>
<p>让 Notion AI 的力量无处不在！</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">它能为您做什么</span><br><span class="line">📧 写邮件</span><br><span class="line">📺 浏览推特、微博等社交媒体平台，回复网友</span><br><span class="line">😯在知乎上写故事...</span><br><span class="line">🔥 基于Open AI GPT模型，带来全新的智能书写体验。</span><br><span class="line">✍️ 支持互联网任意编辑网页的写作助手，有效提高用户写作效率和质量。</span><br><span class="line">📖 产品可以进行查询翻译和辅助阅读，大大减少用户的阅读时间，提高理解力。</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>点评:Notion AI 平替，近期更新了”支持导出自定义指令”,部分功能和<a href="https://x.geekbb.ml/Github-ChatGPT-SP1#chatgpt-box">ChatGPT Box</a>重合，ChatGPT Box 的作者也要增加“插件系统”了，卷到飞起！向你们致敬！</strong><br>运行界面<br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433311.gif"></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433330.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433342.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433355.gif"></p>
<p>| Github 链接：<a href="https://github.com/anc95/writely"><strong>Writely</strong></a> | </p>
<hr>
<h2 id="ChatGPT"><a href="#ChatGPT" class="headerlink" title="ChatGPT"></a><a href="https://github.com/lencx/ChatGPT">ChatGPT</a></h2><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433367.webp"></p>
<blockquote>
<p>ChatGPT 桌面应用程序（Mac、Windows 和 Linux）</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">多平台：macOS Linux Windows</span><br><span class="line">文本转语音</span><br><span class="line">导出 ChatGPT 历史记录（PNG、PDF 和 Markdown）</span><br><span class="line">主窗口和系统托盘支持自定义 URL，可将任何网站包装到桌面应用程序中</span><br><span class="line">自动应用程序升级通知</span><br><span class="line">常用快捷键</span><br><span class="line">系统托盘悬停窗口</span><br><span class="line">强大的菜单项</span><br><span class="line">支持斜杠命令及其配置（可以手动配置或从文件 #55 同步)</span><br><span class="line">自定义全局快捷方式 （#108)</span><br><span class="line">弹出搜索（#122 鼠标选择内容，不超过 400 个字符）：该应用程序是使用 Tauri 构建的，由于其安全限制，某些操作按钮将不起作用，因此我们建议您转到您的浏览器。</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>点评：不需要 API，登录 ChatGPT 帐号就可以使用 (自行判断违规风险),对于我来说，省钱就是王道。作者开了新坑<a href="https://github.com/lencx/nofwl">NoFWL</a>，也可多作了解</strong></li>
</ul>
<p>运行界面<br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433379.webp"></p>
<p>| Github 链接：<a href="https://github.com/lencx/ChatGPT"><strong>ChatGPT</strong></a> | </p>
<hr>
<h2 id="OpenAl-Translator"><a href="#OpenAl-Translator" class="headerlink" title="OpenAl Translator"></a><a href="https://github.com/yetone/openai-translator">OpenAl Translator</a></h2><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433401.webp"></p>
<blockquote>
<p>不仅仅是翻译的翻译器 - 由 OpenAI 提供支持。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">支持三种翻译模式：翻译、润色、总结</span><br><span class="line">支持 55 种语言的相互翻译、润色和总结功能</span><br><span class="line">支持实时翻译、润色和总结，以最快的速度响应用户，让翻译、润色和总结的过程达到前所未有的流畅和顺滑</span><br><span class="line">支持自定义翻译文本</span><br><span class="line">支持一键复制</span><br><span class="line">支持 TTS</span><br><span class="line">有桌面端应用，全平台（Windows + macOS + Linux）支持！</span><br><span class="line">同时支持 OpenAI 和 Azure OpenAI Service</span><br></pre></td></tr></table></figure>
<ul>
<li><p><strong>点评：终结 Bob 的明星产品，光芒四射，无需过多介绍！</strong><br> 运行界面<br> <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433413.webp"></p>
<p> <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433426.gif"></p>
<p> <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433438.webp"></p>
</li>
</ul>
<p>| Github 链接：<a href="https://github.com/yetone/openai-translator"><strong>OpenAl Translator</strong></a> | </p>
<hr>
<h2 id="ChatHub"><a href="#ChatHub" class="headerlink" title="ChatHub"></a><a href="https://github.com/chathub-dev/chathub">ChatHub</a></h2><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433450.webp"></p>
<blockquote>
<p>ChatHub 是款全能聊天机器人客户端</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">🤖 在一个应用中使用不同的聊天机器人，目前支持 ChatGPT、新的 Bing Chat 和 Google Bard，未来将集成更多机器人</span><br><span class="line">💬 同时与多个聊天机器人聊天，方便比较它们的答案</span><br><span class="line">🚀 支持 ChatGPT API 模式，比 ChatGPT Plus 更快、更省成本</span><br><span class="line">📊 在使用 ChatGPT API 模式时，可以查看令牌使用统计信息</span><br><span class="line">🔍 快捷方式，可以快速在浏览器中的任何位置激活应用程序</span><br><span class="line">🎨 支持 Markdown 和代码高亮显示</span><br><span class="line">📚 自定义提示和社区提示的 Prompt 库</span><br><span class="line">💾 本地保存对话历史记录</span><br><span class="line">📥 导入和导出所有数据</span><br><span class="line">🔗 将对话分享为 Markdown</span><br><span class="line">🌙 暗黑模式</span><br></pre></td></tr></table></figure>
<ul>
<li><p><strong>点评：浏览器扩展中的明星产品，AI 瑞士军刀，各家产品对比神器</strong><br>运行界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433463.webp"></p>
</li>
<li><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433476.webp"></p>
</li>
</ul>
<p>| Github 链接：<a href="https://github.com/chathub-dev/chathub"><strong>ChatHub</strong></a> | </p>
<hr>
<h2 id="MacGPT"><a href="#MacGPT" class="headerlink" title="MacGPT"></a><a href="https://www.macgpt.com/">MacGPT</a></h2><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433488.webp"></p>
<blockquote>
<p>Mac 和菜单栏上的 ChatGPT</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用全局功能，您可以在任何地方使用Mac访问ChatGPT。只需激活弹出在屏幕中间的全局文本字段，就可以开始与ChatGPT聊天。</span><br><span class="line">只需输入您的触发短语和提示，ChatGPT直接带入您的文本字段中，使用MacGPT Inline。</span><br><span class="line">迅速从您的菜单栏、网站或API本地访问chatGPT。</span><br><span class="line">访问ChatGPT网站原生应用或者从菜单栏进行访问，无需支付任何额外费用！</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>点评：目前使用主力，特色功能多，高度融合 Mac OS，极致好用</strong></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433500.gif"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433513.gif"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251433525.gif"></p>
<p>| 官网：<a href="%5BMacGPT%5D(https://www.macgpt.com/)"><strong>ChatHub</strong></a> | </p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
      </tags>
  </entry>
  <entry>
    <title>两款平替 CleanMyMac 磁盘清理工具推荐</title>
    <url>/2023/05/CleanMyMac.html</url>
    <content><![CDATA[<blockquote>
<p>无论您是想要替换 CleanMyMac，还是寻找一款免费的磁盘清理工具，这两款软件都是不错的选择。它们简单易用，功能强大，并且不会对您的系统造成任何负面影响。</p>
</blockquote>
<h3 id="mac-cleanup"><a href="#mac-cleanup" class="headerlink" title="mac-cleanup"></a>mac-cleanup</h3><table>
<thead>
<tr>
<th align="left">名称</th>
<th align="center"><span style="text-align: start;">项目</span>地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><div>mac-cleanup</div></td>
<td align="center"><a href="https://github.com/mac-cleanup/mac-cleanup-sh">https://github.com/mac-cleanup/mac-cleanup-sh</a></td>
</tr>
<tr>
<td align="left">mac-cleanup-py</td>
<td align="center"><a href="https://github.com/mac-cleanup/mac-cleanup-py">https://github.com/mac-cleanup/mac-cleanup-py</a></td>
</tr>
</tbody></table>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270919607.webp"></p>
<p>Mac-cleanup 有两个版本，一个是清理脚本 (已弃用)、一个是 mac-cleanup-py。我是一直用清理脚本，方便。但还是推荐大家用新版 mac-cleanup-py</p>
<hr>
<h3 id="Pretty-Clean"><a href="#Pretty-Clean" class="headerlink" title="Pretty Clean"></a>Pretty Clean</h3><table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">项目地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Pretty Clean</td>
<td align="left"><a href="https://www.prettyclean.cc/">https://www.prettyclean.cc/</a></td>
</tr>
</tbody></table>
<p>一款 Rust 编写 macOS 磁盘清理工具，界面简洁、直观、免费。几个核心的功能以满足普通用户与开发者用户的清理需求：</p>
<ol>
<li><p>清理常规软件与系统软件的运行缓存与日志。</p>
</li>
<li><p>清理软件开发中使用的构建工具的运行缓存与日志。</p>
</li>
<li><p>清理软件开发中可通过源码重新获得的编译结果等。</p>
</li>
<li><p>简单易用，只扫描极少文件，最大程度保护用户隐私。</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270919609.webp"></p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这两款软件都有着出色的功能和性能，能够帮助您轻松清理和优化您的 Mac 电脑，完全可以平替 一年十几刀的 CleanMyMac，让您的 Mac 保持干净、高效的状态。如果您有其他好的推荐或者任何问题，欢迎与我分享。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>App</tag>
      </tags>
  </entry>
  <entry>
    <title>小白如何把 Chatbot UI 部署在本地</title>
    <url>/2023/04/ChatbotUI.html</url>
    <content><![CDATA[<p><strong>余所介紹之<a href="https://geekbb.xlog.app/Github-ChatGPT-SP1#chatbot-ui">Chatbot UI</a>昔日已有所涉及，今乃吾之 ChatGPT 網頁端之主力也。吾素用 Github 之專案主頁所薦之一鍵部署於 Vercel，然近日 Vercel，或有日益眾多之使用者，令頁面載入漸見遲緩，影響體驗。欲观其能否部署於己之 VPS 或本地，故特記錄吾之部署過程。</strong></p>
<table>
<thead>
<tr>
<th>名称</th>
<th>地址</th>
</tr>
</thead>
<tbody><tr>
<td>Chatbot UI</td>
<td><a href="https://github.com/mckaywrigley/chatbot-ui">https://github.com/mckaywrigley/chatbot-ui</a></td>
</tr>
</tbody></table>
<hr>
<h3 id="VPS-部署-未完"><a href="#VPS-部署-未完" class="headerlink" title="VPS 部署 (未完)"></a>VPS 部署 (未完)</h3><ul>
<li>首先我按照项目说明在 VPS 安装好各类依赖和环境，运行</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t chatgpt-ui .</span><br></pre></td></tr></table></figure>
<ul>
<li>然后整个世界安静了，为我的小白行径自罚一杯</li>
</ul>
<table>
  <tr>
    <td style="width:50%;">
      <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251450636.webp" style="width:100%">
    </td>
    <td style="width:50%;">
      <img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251450649.webp" style="width:100%">
    </td>
  </tr>
</table>



<p>*待我搞台更强悍的 VPS?😅</p>
<hr>
<h3 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h3><table>
<thead>
<tr>
<th>名称</th>
<th>配置</th>
</tr>
</thead>
<tbody><tr>
<td>Mac OS</td>
<td>Ventura 13.3.1</td>
</tr>
<tr>
<td>Docker</td>
<td>version 23.0.3</td>
</tr>
</tbody></table>
<h4 id="打开终端"><a href="#打开终端" class="headerlink" title="打开终端"></a>打开终端</h4><blockquote>
<p>自行 ChatGPT 安装好 Docker，我的 Docker 项目都是放在”文稿”文件夹里，即:&#x2F;Users&#x2F;geek&#x2F;Documents&#x2F;docker</p>
</blockquote>
<h5 id="终端进入-docker-文件夹"><a href="#终端进入-docker-文件夹" class="headerlink" title="终端进入 docker 文件夹"></a>终端进入 docker 文件夹</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /Users/geek/Documents/docker </span><br></pre></td></tr></table></figure>

<h5 id="克隆-chatbot-ui-项目到本地"><a href="#克隆-chatbot-ui-项目到本地" class="headerlink" title="克隆 chatbot-ui 项目到本地"></a>克隆 chatbot-ui 项目到本地</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/mckaywrigley/chatbot-ui.git</span><br></pre></td></tr></table></figure>
<h5 id="进入-chatbot-ui-文件夹"><a href="#进入-chatbot-ui-文件夹" class="headerlink" title="进入 chatbot-ui 文件夹"></a>进入 chatbot-ui 文件夹</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd chatbot-ui </span><br></pre></td></tr></table></figure>

<h5 id="执行以下命令构建-Docker-镜像："><a href="#执行以下命令构建-Docker-镜像：" class="headerlink" title="执行以下命令构建 Docker 镜像："></a>执行以下命令构建 Docker 镜像：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t chatbot-ui .</span><br></pre></td></tr></table></figure>
<ul>
<li>构建成功会出现如下提示：*如果失败就问 ChatGPT😂</li>
</ul>
<blockquote>
<p> &#x3D;&gt; [production 8&#x2F;8] COPY –from&#x3D;build &#x2F;app&#x2F;next-i18next.config.js .&#x2F;next  0.0s<br>  &#x3D;&gt; exporting to image                                                    10.3s<br>  &#x3D;&gt; &#x3D;&gt; exporting layers                                                   10.3s<br>  &#x3D;&gt; &#x3D;&gt; writing image sha256:bdc155462ef83c399e49a925fab840.0s<br>  &#x3D;&gt; &#x3D;&gt; naming to docker.io&#x2F;library&#x2F;chatbot-ui</p>
</blockquote>
<h5 id="运行-Docker"><a href="#运行-Docker" class="headerlink" title="运行 Docker"></a>运行 Docker</h5><ul>
<li>将 xxxxxxxx 替换为你的 OpenAI API</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -e OPENAI_API_KEY=xxxxxxxx -p 3000:3000 chatbot-ui</span><br></pre></td></tr></table></figure>

<hr>
<ul>
<li>要将 docker 容器从前台模式更改为后台模式，请使用以下命令：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -e OPENAI_API_KEY=xxxxxxxx -p 3000:3000 chatbot-ui</span><br></pre></td></tr></table></figure>
<ul>
<li>在此命令中，我们添加了一个 -d 标志，它表示分离模式。这将使 Docker 容器在后台运行，而不是前台运行。</li>
</ul>
<hr>
<ul>
<li>另外，如果您需要给容器命名，可以使用 –name 标志指定一个名称，例如：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --name my-container -e OPENAI_API_KEY=xxxxxxxx -p 3000:3000 chatbot-ui</span><br></pre></td></tr></table></figure>
<ul>
<li>这将为容器命名为 my-container。</li>
</ul>
<hr>
<h4 id="打开浏览器-搞定-🎉"><a href="#打开浏览器-搞定-🎉" class="headerlink" title="打开浏览器 (搞定)🎉"></a>打开浏览器 (搞定)🎉</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:3000/</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251450595.webp"></p>
<blockquote>
<p>注：我用的是软路由白名单上网，国内环境使用，还请自行研究<a href="https://github.com/x-dr/chatgptProxyAPI">chatgptProxyAPI</a></p>
</blockquote>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>小白如何安装 Docker&amp;Compose</title>
    <url>/2023/04/DockerCompose.html</url>
    <content><![CDATA[<h2 id="一、安装-Docker"><a href="#一、安装-Docker" class="headerlink" title="一、安装 Docker"></a>一、安装 Docker</h2><blockquote>
<p>以 Debian 为例 </p>
</blockquote>
<h3 id="更新软件包、安装-wget-和-vim-工具"><a href="#更新软件包、安装-wget-和-vim-工具" class="headerlink" title="更新软件包、安装 wget 和 vim 工具"></a>更新软件包、安装 wget 和 vim 工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y wget vim</span><br></pre></td></tr></table></figure>

<h3 id="下载并安装-Docker"><a href="#下载并安装-Docker" class="headerlink" title="下载并安装 Docker"></a>下载并安装 Docker</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="显示-Docker-版本"><a href="#显示-Docker-版本" class="headerlink" title="显示 Docker 版本"></a>显示 Docker 版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure>

<h3 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure>

<h2 id="二、安装-Docker-Compose"><a href="#二、安装-Docker-Compose" class="headerlink" title="二、安装 Docker-Compose"></a>二、安装 Docker-Compose</h2><h3 id="更新包列表"><a href="#更新包列表" class="headerlink" title="更新包列表"></a>更新包列表</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<h3 id="安装-Docker-Compose-依赖"><a href="#安装-Docker-Compose-依赖" class="headerlink" title="安装 Docker Compose 依赖"></a>安装 Docker Compose 依赖</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install curl</span><br></pre></td></tr></table></figure>

<h3 id="下载-Docker-Compose"><a href="#下载-Docker-Compose" class="headerlink" title="下载 Docker Compose"></a>下载 Docker Compose</h3><!--使用以下命令从 Docker 官方网站下载最新版本的 Docker Compose 二进制文件：-->

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/latest/download/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<h3 id="添加执行权限"><a href="#添加执行权限" class="headerlink" title="添加执行权限"></a>添加执行权限</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<h3 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>

<p>如果成功安装，将显示 Docker Compose 的版本信息。</p>
<hr>
<h2 id="卸载-Docker"><a href="#卸载-Docker" class="headerlink" title="卸载 Docker"></a>卸载 Docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Sudo apt-get purge docker-ce docker-ce-cli containerd. Io</span><br></pre></td></tr></table></figure>


<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Sudo <span class="built_in">rm</span> -rf /var/lib/docker</span><br><span class="line">Sudo <span class="built_in">rm</span> -rf /var/lib/containerd</span><br></pre></td></tr></table></figure>
<h2 id="Docker-常用命令"><a href="#Docker-常用命令" class="headerlink" title="Docker 常用命令"></a>Docker 常用命令</h2><table>
<thead>
<tr>
<th align="left">命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>docker run</code></td>
<td>运行一个容器</td>
</tr>
<tr>
<td align="left"><code>docker build</code></td>
<td>构建一个镜像</td>
</tr>
<tr>
<td align="left"><code>docker pull</code></td>
<td>拉取一个镜像</td>
</tr>
<tr>
<td align="left"><code>docker push</code></td>
<td>推送一个镜像到仓库</td>
</tr>
<tr>
<td align="left"><code>docker images</code></td>
<td>列出本地所有的镜像</td>
</tr>
<tr>
<td align="left"><code>docker ps</code></td>
<td>列出正在运行的容器</td>
</tr>
<tr>
<td align="left"><code>docker stop</code></td>
<td>停止一个或多个容器</td>
</tr>
<tr>
<td align="left"><code>docker rm</code></td>
<td>删除一个或多个容器</td>
</tr>
<tr>
<td align="left"><code>docker rmi</code></td>
<td>删除一个或多个镜像</td>
</tr>
<tr>
<td align="left"><code>docker exec</code></td>
<td>在容器中执行命令</td>
</tr>
<tr>
<td align="left"><code>docker stop $(docker ps -a -q)</code></td>
<td>停止所有容器</td>
</tr>
<tr>
<td align="left"><code>docker rm $(docker ps -a -q)</code></td>
<td><strong>删除所有容器</strong></td>
</tr>
<tr>
<td align="left"><code>docker image prune -a</code></td>
<td>删除未使用的镜像</td>
</tr>
<tr>
<td align="left"><code>docker volume prune</code></td>
<td>删除未使用的卷</td>
</tr>
<tr>
<td align="left"><code>docker network prune</code></td>
<td>删除未使用的网络</td>
</tr>
<tr>
<td align="left"><code>docker system prune</code></td>
<td>删除停止的容器、未使用的镜像、卷和网络</td>
</tr>
<tr>
<td align="left"><code>docker rmi $(docker images -f &quot;dangling=true&quot; -q)</code></td>
<td>清理无标签的镜像</td>
</tr>
<tr>
<td align="left"><code>docker container prune</code></td>
<td>清理停止的容器</td>
</tr>
<tr>
<td align="left"><code>docker system prune -a --volumes</code></td>
<td>清理不再使用的数据</td>
</tr>
<tr>
<td align="left"><code>docker image prune -a -f</code></td>
<td>强制清理</td>
</tr>
<tr>
<td align="left"></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 部署免费 GPT4-FreeGPT</title>
    <url>/2023/07/FreeGPT4.html</url>
    <content><![CDATA[<p>💡 <a href="https://github.com/ramonvc/freegpt-webui">freegpt-webui</a>项目好像又行了，虽然不太稳定，免费的还要什么自行车。能用就行<br><a href="https://github.com/ramonvc/freegpt-webui">https://github.com/ramonvc/freegpt-webui</a></p>
<blockquote>
<p>使用 Docker 部署非常简单 (本地可用 OrbStack)</p>
</blockquote>
<ul>
<li>拉取镜像</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull ramonvc/freegpt-webui</span><br></pre></td></tr></table></figure>

<ul>
<li>启动</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -p 1338:1338 ramonvc/freegpt-webui</span><br></pre></td></tr></table></figure>

<ul>
<li>浏览器输入（本地）</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:1338` or `http://localhost:1338</span><br></pre></td></tr></table></figure>

<blockquote>
<p>GPT-4 对话，我使用了<code>我爸爸妈妈结婚，为什么没有邀请我？</code> 来测试，还真是 GPT4，不过有时回答不太稳定</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img@master/uPic/Untitled.png" alt="Untitled"></p>
<blockquote>
<p>而 GPT3.5-turbo 0613 还是老样子</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img@master/uPic/Untitled%20(1).png" alt="Untitled (1)"></p>
<aside> 💡 最后：免费 GPT，对话受网络影响容易出错，有时需要多试几次，当成备用玩玩，足也。
</aside>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS 14 Sonoma 博通网卡驱动支持</title>
    <url>/2023/09/Hackintoswifi.html</url>
    <content><![CDATA[<h3 id="macOS-14-Sonoma"><a href="#macOS-14-Sonoma" class="headerlink" title="macOS 14 Sonoma"></a>macOS 14 Sonoma</h3><p>众所周知，苹果 macOS 14 终于把大刀抡向博通无线网卡，<strong>BCM94360 &#x2F; BCM943602</strong> 都无法在 Sonoma 驱动，目前的解决方案只有使用 <strong>OpenCore Legacy Patcher</strong>，可以完美驱动博通无线网卡，唯一缺点就是每次升级 OS 都需要<strong>OpenCore Legacy Patcher</strong>打补丁，下面是操作教程。</p>
<p><strong>OpenCore Legacy Patcher</strong> 已经对 macOS Sonoma 有初步支持，原文 <a href="https://github.com/dortania/OpenCore-Legacy-Patcher/pull/1077">https://github.com/dortania/OpenCore-Legacy-Patcher/pull/1077</a></p>
<h3 id="OpenCore-设置"><a href="#OpenCore-设置" class="headerlink" title="OpenCore 设置"></a>OpenCore 设置</h3><h4 id="NVRAM-随机访问存储器设置"><a href="#NVRAM-随机访问存储器设置" class="headerlink" title="NVRAM-随机访问存储器设置"></a>NVRAM-随机访问存储器设置</h4><blockquote>
<p>将系统完整性保护设为 0x0803、禁用 AMFI</p>
</blockquote>
<ul>
<li>在 NVRAM&gt;Add&gt;7C436110-AB2A-4BBB-A880-FE41995C9F82&gt;csr-active-config 添加 <code>03080000</code></li>
<li>NVRAM&gt;Add&gt;7C436110-AB2A-4BBB-A880-FE41995C9F82&gt;boot-args 添加 <code>amfi=0x80</code></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309272116730.webp"></p>
<blockquote>
<p>将 csr-active-config 添加到删除</p>
</blockquote>
<ul>
<li>在 NVRAM&gt;Delete&gt;7C436110-AB2A-4BBB-A880-FE41995C9F82&gt; 添加<code>csr-active-config</code></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309272119688.webp"></p>
<h4 id="Misc-其它设置"><a href="#Misc-其它设置" class="headerlink" title="Misc-其它设置"></a>Misc-其它设置</h4><blockquote>
<p>将安全启动模型设置为 Disabled</p>
</blockquote>
<ul>
<li>Misc &gt; Security &gt; SecureBootModel &gt; <code>Disabled</code></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309272121775.webp"></p>
<h4 id="Kernel-内核设置"><a href="#Kernel-内核设置" class="headerlink" title="Kernel-内核设置"></a>Kernel-内核设置</h4><p>按以下顺序注入三个 kext   (<strong><u>一定要按图设置，否则有卡白苹果的风险</u></strong>)</p>
<p>下载： <strong><a href="https://github.com/dortania/OpenCore-Legacy-Patcher/blob/e21efa975c0cf228cb36e81a974bc6b4c27c7807/payloads/Kexts/Wifi/IOSkywalkFamily-v1.0.0.zip">IOSkywalk.kext</a>、<a href="https://github.com/dortania/OpenCore-Legacy-Patcher/blob/e21efa975c0cf228cb36e81a974bc6b4c27c7807/payloads/Kexts/Wifi/IO80211FamilyLegacy-v1.0.0.zip">IO80211FamilyLegacy.kext</a></strong> （右边下载原始文件）</p>
<ul>
<li>OSkywalk.kext</li>
<li>O80211FamilyLegacy.kext</li>
<li>O80211FamilyLegacy.kext(AirPortBrcmNIC)</li>
<li><strong>最小内核设置为 23.0.0</strong></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309272123218.webp"></p>
<p>阻止<code>com.apple.iokit.IOSkywalkFamily</code>加载 (<strong><u>一定要按图设置，否则有卡白苹果的风险</u></strong>)</p>
<ul>
<li><strong>最小内核设置为 23.0.0</strong></li>
<li><strong>Strategy(策略) 设置为 Exclude(阻止)</strong></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309272130168.webp"></p>
<h4 id="以上设置好后重启电脑"><a href="#以上设置好后重启电脑" class="headerlink" title="以上设置好后重启电脑"></a>以上设置好后重启电脑</h4><hr>
<h3 id="OpenCore-Legacy-Patcher-设置"><a href="#OpenCore-Legacy-Patcher-设置" class="headerlink" title="OpenCore Legacy Patcher 设置"></a>OpenCore Legacy Patcher 设置</h3><p>OpenCore Legacy Patcher <a href="https://bit.ly/3ZAH0ve">下载</a></p>
<ul>
<li>点 Post-Install Root Patch</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309272136489.webp"></p>
<ul>
<li>Start Root Patching</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309272138408.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309272139664.webp"></p>
<h4 id="以上设置好后重启电脑-1"><a href="#以上设置好后重启电脑-1" class="headerlink" title="以上设置好后重启电脑"></a>以上设置好后重启电脑</h4><hr>
<h3 id="搞定"><a href="#搞定" class="headerlink" title="搞定"></a>搞定</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309272140309.webp"></p>
<p>且玩且珍惜~~</p>
<hr>
<h3 id="番外-博通网卡速率问题"><a href="#番外-博通网卡速率问题" class="headerlink" title="番外 博通网卡速率问题"></a>番外 博通网卡速率问题</h3><p>早在 macOS 13 我就发现，博通部分网卡，虽然免驱，但是链接后速率很低（350Mbps 以下），刚开始以为是无线路由问题，后来才知道需要调整所属地区代码。</p>
<ul>
<li><p>下载 <a href="https://github.com/acidanthera/AirportBrcmFixup/tags">AirportBrcmFixup.kext</a></p>
</li>
<li><p>放入 Kernel-内核设置，最大内核按图设置。（注意加载顺序）</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309281337152.webp"> </p>
<ul>
<li>NVRAM-随机访问存储器设置 boot-args 添加 <code>-brcmfxbeta brcmfx-country=HK</code> 地区设置成香港</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309281346642.webp"></p>
<ul>
<li>保存重启搞定</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309281347552.png"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>黑苹果</tag>
      </tags>
  </entry>
  <entry>
    <title>对抗 QoS 阻断&amp;限速 Hysteria2 端口跳跃设置</title>
    <url>/2023/09/Hysteria2Port.html</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#2023年10月9日更新</span></span><br><span class="line">- 增加IPV6设置</span><br></pre></td></tr></table></figure>



<h3 id="UDP-限速"><a href="#UDP-限速" class="headerlink" title="UDP 限速"></a>UDP 限速</h3><p>三大运营商对 UDP 的阻断&amp;限速肯定是存在的，至少有 QoS 限制，刚开始还以为南方联通比较宽容，没想都是一丘之貉，我遇见的是阻断，具体表现为“<code>连续下载或跑大流量3分钟左右，就直接阻断，大概再过几分钟又恢复连接</code>“，这些限制一般只是单个端口。本篇博文就来说说如何设置 Hysteria2 端口跳跃，以对抗运营商的阻断和限速。</p>
<hr>
<h3 id="搭建-Hysteria-2"><a href="#搭建-Hysteria-2" class="headerlink" title="搭建 Hysteria 2"></a>搭建 Hysteria 2</h3><p>关于 Hysteria2 节点的搭建，可以参考上一期《<a href="https://www.igeekbb.com/2023/09/hysteria.html#%E9%83%A8%E7%BD%B2-Hysteria2">Hysteria2 &amp; VLESS-gRPC-uTLS-REALITY 对比测试</a>》</p>
<hr>
<h3 id="配合-Iptables-实现端口跳跃"><a href="#配合-Iptables-实现端口跳跃" class="headerlink" title="配合 Iptables 实现端口跳跃"></a>配合 Iptables 实现端口跳跃</h3><p>按照 Hysteria 官网的说法，Hysteria 服务端并不能同时监听多个端口，因此不能在服务器端使用上面的格式作为监听地址。<strong>建议配合 iptables 的 DNAT 将端口转发到服务器的监听端口。</strong> <a href="https://v2.hysteria.network/zh/docs/advanced/Port-Hopping/">[来源]</a></p>
<p>下面就以我的 Hysteria 2 来演示：端口 5353 端口跳跃 20000-50000</p>
<h4 id="安装-iptables-persistent"><a href="#安装-iptables-persistent" class="headerlink" title="安装 iptables-persistent"></a>安装 iptables-persistent</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install iptables-persistent</span><br></pre></td></tr></table></figure>

<p>一直 YES&amp;ENTER</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309222024823.webp"></p>
<h4 id="IPV4-设置"><a href="#IPV4-设置" class="headerlink" title="IPV4 设置"></a>IPV4 设置</h4><h5 id="清空默认规则-自定义规则"><a href="#清空默认规则-自定义规则" class="headerlink" title="清空默认规则&amp;自定义规则"></a>清空默认规则&amp;自定义规则</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -X</span><br></pre></td></tr></table></figure>

<h5 id="允许本地访问"><a href="#允许本地访问" class="headerlink" title="允许本地访问"></a>允许本地访问</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="开放-SSH-端口（默认-22）"><a href="#开放-SSH-端口（默认-22）" class="headerlink" title="开放 SSH 端口（默认 22）"></a>开放 SSH 端口（默认 22）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="开放-HTTP-HTTPS-端口"><a href="#开放-HTTP-HTTPS-端口" class="headerlink" title="开放 HTTP &#x2F; HTTPS 端口"></a>开放 HTTP &#x2F; HTTPS 端口</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 443 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="开放-UDP-端口（5353-替换为自己-Hysteria-的监听端口）"><a href="#开放-UDP-端口（5353-替换为自己-Hysteria-的监听端口）" class="headerlink" title="开放 UDP 端口（5353 替换为自己 Hysteria 的监听端口）"></a>开放 UDP 端口（5353 替换为自己 Hysteria 的监听端口）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p udp --dport 5353 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="开放-UDP-端口跳跃范围（端口范围为-20000-50000）"><a href="#开放-UDP-端口跳跃范围（端口范围为-20000-50000）" class="headerlink" title="开放 UDP 端口跳跃范围（端口范围为 20000-50000）"></a>开放 UDP 端口跳跃范围（端口范围为 20000-50000）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p udp --dport 20000:50000 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="允许接受本机请求之后的返回数据"><a href="#允许接受本机请求之后的返回数据" class="headerlink" title="允许接受本机请求之后的返回数据"></a>允许接受本机请求之后的返回数据</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="其他入站一律禁止"><a href="#其他入站一律禁止" class="headerlink" title="其他入站一律禁止"></a>其他入站一律禁止</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -P INPUT DROP</span><br></pre></td></tr></table></figure>

<h5 id="允许所有出站"><a href="#允许所有出站" class="headerlink" title="允许所有出站"></a>允许所有出站</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -P OUTPUT ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="查看开放的端口"><a href="#查看开放的端口" class="headerlink" title="查看开放的端口"></a>查看开放的端口</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -L</span><br></pre></td></tr></table></figure>

<h5 id="添加-NAT-规则-建议参考"><a href="#添加-NAT-规则-建议参考" class="headerlink" title="添加 NAT 规则 [建议参考]"></a>添加 NAT 规则 <a href="https://github.com/apernet/hysteria/issues/629">[建议参考]</a></h5><blockquote>
<p>将匹配到的 UDP 数据包的目标端口在 20000 到 50000 之间的数据包，重定向到本地服务器的 5353 端口</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p udp --dport 20000:50000 -j DNAT --to-destination :5353</span><br></pre></td></tr></table></figure>

<h5 id="查看-NAT-规则"><a href="#查看-NAT-规则" class="headerlink" title="查看 NAT 规则"></a>查看 NAT 规则</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -nL --line</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309241107255.webp"></p>
<h4 id="IPV6-设置"><a href="#IPV6-设置" class="headerlink" title="IPV6 设置"></a>IPV6 设置</h4><h5 id="清空默认规则-自定义规则-1"><a href="#清空默认规则-自定义规则-1" class="headerlink" title="清空默认规则&amp;自定义规则"></a>清空默认规则&amp;自定义规则</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -F</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -X</span><br></pre></td></tr></table></figure>

<h5 id="允许本地访问-1"><a href="#允许本地访问-1" class="headerlink" title="允许本地访问"></a>允许本地访问</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -A INPUT -i lo -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="开放-SSH-端口（默认-22）-1"><a href="#开放-SSH-端口（默认-22）-1" class="headerlink" title="开放 SSH 端口（默认 22）"></a>开放 SSH 端口（默认 22）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="开放-HTTP-HTTPS-端口-1"><a href="#开放-HTTP-HTTPS-端口-1" class="headerlink" title="开放 HTTP &#x2F; HTTPS 端口"></a>开放 HTTP &#x2F; HTTPS 端口</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -A INPUT -p tcp --dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -A INPUT -p tcp --dport 443 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="开放-UDP-端口（5353-替换为自己-Hysteria-的监听端口）-1"><a href="#开放-UDP-端口（5353-替换为自己-Hysteria-的监听端口）-1" class="headerlink" title="开放 UDP 端口（5353 替换为自己 Hysteria 的监听端口）"></a>开放 UDP 端口（5353 替换为自己 Hysteria 的监听端口）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -A INPUT -p udp --dport 5353 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="开放-UDP-端口跳跃范围（端口范围为-20000-50000）-1"><a href="#开放-UDP-端口跳跃范围（端口范围为-20000-50000）-1" class="headerlink" title="开放 UDP 端口跳跃范围（端口范围为 20000-50000）"></a>开放 UDP 端口跳跃范围（端口范围为 20000-50000）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -A INPUT -p udp --dport 20000:50000 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="允许接受本机请求之后的返回数据-1"><a href="#允许接受本机请求之后的返回数据-1" class="headerlink" title="允许接受本机请求之后的返回数据"></a>允许接受本机请求之后的返回数据</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="其他入站一律禁止-1"><a href="#其他入站一律禁止-1" class="headerlink" title="其他入站一律禁止"></a>其他入站一律禁止</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -P INPUT DROP</span><br></pre></td></tr></table></figure>

<h5 id="允许所有出站-1"><a href="#允许所有出站-1" class="headerlink" title="允许所有出站"></a>允许所有出站</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -P OUTPUT ACCEPT</span><br></pre></td></tr></table></figure>

<h5 id="查看开放的端口-1"><a href="#查看开放的端口-1" class="headerlink" title="查看开放的端口"></a>查看开放的端口</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -L</span><br></pre></td></tr></table></figure>

<h5 id="添加-NAT-规则-建议参考-1"><a href="#添加-NAT-规则-建议参考-1" class="headerlink" title="添加 NAT 规则 [建议参考]"></a>添加 NAT 规则 <a href="https://github.com/apernet/hysteria/issues/629">[建议参考]</a></h5><blockquote>
<p>将匹配到的 UDP 数据包的目标端口在 20000 到 50000 之间的数据包，重定向到本地服务器的 5353 端口</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -t nat -A PREROUTING -p udp --dport 20000:50000 -j DNAT --to-destination :5353</span><br></pre></td></tr></table></figure>

<h5 id="查看-NAT-规则-1"><a href="#查看-NAT-规则-1" class="headerlink" title="查看 NAT 规则"></a>查看 NAT 规则</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip6tables -t nat -nL --line</span><br></pre></td></tr></table></figure>

<h4 id="保存-iptables-规则"><a href="#保存-iptables-规则" class="headerlink" title="保存 iptables 规则"></a>保存 iptables 规则</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netfilter-persistent save</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果你填写错误，可以使用以下命令删除 iptables 规则</p>
</blockquote>
<h4 id="删除-iptables-规则"><a href="#删除-iptables-规则" class="headerlink" title="删除 iptables 规则"></a>删除 iptables 规则</h4><p>删除指定的 NAT 规则：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -D PREROUTING &lt;行号&gt;</span><br></pre></td></tr></table></figure>

<p>删除所有 NAT 规则：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -F</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 删除所有规则 </span><br><span class="line">sudo ip6tables -F </span><br><span class="line"></span><br><span class="line"># 删除 INPUT 链中的所有规则 </span><br><span class="line">sudo ip6tables -F INPUT </span><br><span class="line"></span><br><span class="line"># 删除 INPUT 链中的第一个规则 </span><br><span class="line">sudo ip6tables -D INPUT 1 </span><br><span class="line"></span><br><span class="line"># 禁用 INPUT 链中的第一个规则 </span><br><span class="line">sudo ip6tables -I INPUT 1 -j DROP</span><br></pre></td></tr></table></figure>



<hr>
<h3 id="服务器配置文件"><a href="#服务器配置文件" class="headerlink" title="服务器配置文件"></a>服务器配置文件</h3><h4 id="自备域名版"><a href="#自备域名版" class="headerlink" title="自备域名版"></a>自备域名版</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span> <span class="string">&gt;</span> <span class="string">/etc/hysteria/config.yaml</span></span><br><span class="line"><span class="attr">listen:</span> <span class="string">:5353</span> <span class="comment">#监听端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用 CA 证书</span></span><br><span class="line"><span class="attr">acme:</span></span><br><span class="line">  <span class="attr">domains:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">www.igeekbb.com</span> <span class="comment">#你的域名，需要先解析到服务器 ip</span></span><br><span class="line">  <span class="attr">email:</span> <span class="string">geek@gmail.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用自签证书</span></span><br><span class="line"><span class="comment">#tls:</span></span><br><span class="line"><span class="comment">#  cert: /etc/hysteria/server.crt</span></span><br><span class="line"><span class="comment">#  key: /etc/hysteria/server.key</span></span><br><span class="line"></span><br><span class="line"><span class="attr">auth:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">password</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456</span> <span class="comment">#设置认证密码</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">masquerade:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">proxy</span></span><br><span class="line">  <span class="attr">proxy:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://bing.com</span> <span class="comment">#伪装网址</span></span><br><span class="line">    <span class="attr">rewriteHost:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h4 id="无域名自签版"><a href="#无域名自签版" class="headerlink" title="无域名自签版"></a>无域名自签版</h4><h5 id="生成自签证书"><a href="#生成自签证书" class="headerlink" title="生成自签证书"></a>生成自签证书</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl req -x509 -nodes -newkey ec:&lt;(openssl ecparam -name prime256v1) -keyout /etc/hysteria/server.key -out /etc/hysteria/server.crt -subj <span class="string">&quot;/CN=bing.com&quot;</span> -days 36500 &amp;&amp; sudo <span class="built_in">chown</span> hysteria /etc/hysteria/server.key &amp;&amp; sudo <span class="built_in">chown</span> hysteria /etc/hysteria/server.crt</span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span> <span class="string">&gt;</span> <span class="string">/etc/hysteria/config.yaml</span></span><br><span class="line"><span class="attr">listen:</span> <span class="string">:5353</span> <span class="comment">#监听端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用 CA 证书</span></span><br><span class="line"><span class="comment">#acme:</span></span><br><span class="line"><span class="comment">#  domains:</span></span><br><span class="line"><span class="comment">#    - www.igeekbb.com #你的域名，需要先解析到服务器 ip</span></span><br><span class="line"><span class="comment">#  email: geek@gmail.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用自签证书</span></span><br><span class="line"><span class="attr">tls:</span></span><br><span class="line">  <span class="attr">cert:</span> <span class="string">/etc/hysteria/server.crt</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">/etc/hysteria/server.key</span></span><br><span class="line"></span><br><span class="line"><span class="attr">auth:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">password</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456</span> <span class="comment">#设置认证密码</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">masquerade:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">proxy</span></span><br><span class="line">  <span class="attr">proxy:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://bing.com</span> <span class="comment">#伪装网址</span></span><br><span class="line">    <span class="attr">rewriteHost:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<hr>
<p>这里展示 PassWall 客户端的填法</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309222032643.webp"></p>
<hr>
<blockquote>
<p>以下是 Iptables 卸载步骤</p>
</blockquote>
<h3 id="卸载-Iptables"><a href="#卸载-Iptables" class="headerlink" title="卸载 Iptables"></a>卸载 Iptables</h3><h4 id="1、停止-iptables-服务"><a href="#1、停止-iptables-服务" class="headerlink" title="1、停止 iptables 服务"></a>1、停止 iptables 服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop iptables</span><br></pre></td></tr></table></figure>

<h4 id="2、禁用-iptables-服务"><a href="#2、禁用-iptables-服务" class="headerlink" title="2、禁用 iptables 服务"></a>2、禁用 iptables 服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">disable</span> iptables</span><br></pre></td></tr></table></figure>

<h4 id="3、卸载-iptables-软件包"><a href="#3、卸载-iptables-软件包" class="headerlink" title="3、卸载 iptables 软件包"></a>3、卸载 iptables 软件包</h4><h5 id="Debian-系统"><a href="#Debian-系统" class="headerlink" title="Debian 系统"></a>Debian 系统</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove iptables</span><br></pre></td></tr></table></figure>

<h5 id="CentOS-系统"><a href="#CentOS-系统" class="headerlink" title="CentOS 系统"></a>CentOS 系统</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum remove iptables</span><br></pre></td></tr></table></figure>

<p>4、删除 iptables 配置文件&amp;规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -r /etc/iptables/</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo iptables -F</span><br><span class="line">sudo iptables -X</span><br></pre></td></tr></table></figure>

<hr>
<p>资料参考：<a href="https://github.com/TinrLin/sing-box_-tutorial/tree/main/Hysteria2">https://github.com/TinrLin/sing-box_-tutorial/tree/main/Hysteria2</a></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>稳定三年的斐讯 K2T 三台 KVR 组网方案</title>
    <url>/2023/08/K2TKVR.html</url>
    <content><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>早在 19 年，看了“司波图“的《<a href="https://www.youtube.com/watch?v=mfo3M1zL1Ss&t=103s&ab_channel=%E5%8F%B8%E6%B3%A2%E5%9B%BE">斐讯 K2T 无线路由 KVR 组网实战</a>》，高通 Soc 方案，QCA9886 无线芯片。作为垃圾佬中的性价比之王，种草了斐讯 K2T，当时 K2T 还是矿难产品，各大二手平台充斥着物美价廉的 K2T，随即入手两台斐讯 K2T+ 新三路由器给家里组网。</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308081341812.webp"></p>
<h2 id="K2T-刷机"><a href="#K2T-刷机" class="headerlink" title="K2T 刷机"></a>K2T 刷机</h2><p>记得 2019 年购买时还是斐讯原装系统，需要自己刷 breed，也是在“<a href="https://www.right.com.cn/forum/forum.php?mod=forumdisplay&fid=158&filter=typeid&typeid=19">恩山论坛 K2T 版块</a>”找到刷机教程搞定，现在购买的基本都刷好 OpenWRT 或集客 AC 了，自然也刷好了 breed。在这三年的使用中，发现新三路由器 (Newifi3) 刷集客固件组网还是没有 K2T 稳定，AP 管理时常掉线（网未断）。就在前两天刷 PDD 又看到了 K2T，价格居然降下来了，70 元入手一台，把三路由器 (Newifi3) 替换，组成 K2T 三台 KVR，爽歪歪。</p>
<h3 id="进入-Breed"><a href="#进入-Breed" class="headerlink" title="进入 Breed"></a>进入 Breed</h3><p>到货后直接戳住 ‘RESET’ 孔，上电开机，breed 后台是 192.168.1.1</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308081414052.webp"></p>
<p>刷入集客官网下载的固件<a href="http://file.cnrouter.com/index.php/Index/index.html?model_id=45&device_type_id=4">GECOOS_K2T_QCA956X_7.1_2022022200.bin</a> （无需注册，功能解锁）</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308081417606.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308081956778.webp"><br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308081956779.webp"><br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308081956780.webp"><br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308081956781.webp"></p>
<h2 id="接入集客-AP"><a href="#接入集客-AP" class="headerlink" title="接入集客 AP"></a>接入集客 AP</h2><p>重启后自动接入部署在 Unraid 的集客网关 AC</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308082111904.webp"></p>
<p>配好默认模板，接入后自动套用 </p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308082111905.webp"><br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308082111906.webp"></p>
<h2 id="速度测试"><a href="#速度测试" class="headerlink" title="速度测试"></a>速度测试</h2><p>这里借用司波图的图</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308081435502.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202308081448001.webp"></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>斐讯 K2T 无线路由做为家宽在 500M 以内，如果喜欢折腾和追求性价比，还是非常推荐。这两台在近四年的使用中，一直稳定运行，中途一只电源坏过一次，在 PDD 单补了一个电源大概在 30 元左右，成本已经很低了。</p>
<hr>
<p>就在准备发布这篇博文的时候，PDD 购买的 K2T 电源就故障了，具体表现是每个 10 分钟就重启，已申请退款😂，马上重新在淘宝以 65 元下单。所以买矿难产品就是看人品，想买到全新基本不可能，好在另外两台一直稳定了近四年，已经值票价。来吧，垃圾佬就不要怕折腾。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>K2T</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>王国之泪偷跑！关于游戏&amp;模拟器的那些事</title>
    <url>/2023/05/NsEmuTools.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本来塞尔达传说：王国之泪将于 5 月 12 日登陆 Switch，结果在 5 月 2 日就偷跑，并且模拟器可玩，这就有意思了！我来推荐几个珍藏的模拟器管理工具和游戏资源下载网站，PC 玩家可以玩起来了，低调~</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307262121636.webp"></p>
<h3 id="模拟器"><a href="#模拟器" class="headerlink" title="模拟器"></a>模拟器</h3><p>运行塞尔达传说：王国之泪，我使用的模拟器 [Ryujinx]，也叫龙神模拟器，实测目前是可以正常运行！（Radeon™ RX 580 24 帧）。</p>
<h4 id="模拟器管理"><a href="#模拟器管理" class="headerlink" title="模拟器管理"></a>模拟器管理</h4><blockquote>
<p>模拟器管理必须力荐 <a href="https://github.com/triwinds/ns-emu-tools">NS-emu-tools</a></p>
</blockquote>
<p><strong>Ns Emu Tools 简直是 PC 党的福音，和懒人包没有什么区别，支持 Yuzu &amp; Ryujinx 模拟器各种版本的安装&#x2F;更新，集成 Switch 固件版本安装，加上 keys 密钥和金手指管理，一条龙服务打破 PC 运行 Switch 游戏的技术壁垒，小白也能轻松入门。</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307262121637.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307262121638.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307262121639.webp"></p>
<h3 id="游戏资源"><a href="#游戏资源" class="headerlink" title="游戏资源"></a>游戏资源</h3><blockquote>
<p>有很多网站在提供 Switch 游戏资源，比如 <a href="https://xxxxx525.com/">Switch520</a> 他们的网址经常变，所以这里我只推荐一个网站 <a href="http://nsemu.ysepan.com/">NS 模拟器资源中转站</a>，强烈推荐没玩过模拟器的朋友看看此网站里简易教程</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307262121640.webp"></p>
<h3 id="简易教程"><a href="#简易教程" class="headerlink" title="简易教程"></a>简易教程</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307262121641.webp"><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307262121642.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307262121643.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307262121645.webp"></p>
<blockquote>
<p>当然，如果你使用 <a href="https://github.com/triwinds/ns-emu-tools">NS-emu-tools</a> ，上面的简易教程你只需要了解一下，因为 Ns Emu Tools 会直接带你上手！</p>
</blockquote>
<ul>
<li>最后祝大家玩得开心🎊</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307262121646.webp"></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>为 Obsidian 推荐几款好看的字体</title>
    <url>/2023/04/ObsidianTypeface.html</url>
    <content><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>近日为 Obsidian 笔记软件所倾倒。吾于 <a href="https://twitter.com/geekbb/status/1648514269980540928?s=20">Twitter</a> 曰，Notion 愈益沉重，加以笔记存于云，常觉不安。是以初探 Obsidian。今人皆以貌取人，故必先修饰门面，方心怡记笔记。余于学习中多措字体，后得所满意者，与诸君共享之。</p>
<h3 id="Obsidian-效果图"><a href="#Obsidian-效果图" class="headerlink" title="Obsidian 效果图"></a>Obsidian 效果图</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307260951333.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307260951332.webp"></p>
<hr>
<h3 id="字体下载"><a href="#字体下载" class="headerlink" title="字体下载"></a>字体下载</h3><table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">&nbsp;地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">霞鹜文楷</td>
<td align="left"><a href="https://github.com/lxgw/LxgwWenKai">https://github.com/lxgw/LxgwWenKai</a></td>
</tr>
<tr>
<td align="left">思源黑体</td>
<td align="left"><a href="https://n2o.io/lab/userstyles/?ref=greasyfork">UserStyles 用户样式 (n2o.io)</a></td>
</tr>
<tr>
<td align="left">阿里巴巴普惠体 2.0</td>
<td align="left"><a href="https://fonts.alibabagroup.com/#/font">阿里巴巴普惠体 (alibabagroup.com)</a></td>
</tr>
</tbody></table>
<blockquote>
<p>阿里巴巴普惠体 2.0 我使用的是 AlibabaPuHuiTi-2-65-Medium</p>
</blockquote>
<hr>
<h3 id="Obsidian-设置"><a href="#Obsidian-设置" class="headerlink" title="Obsidian 设置"></a>Obsidian 设置</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307260951331.webp"></p>
<hr>
<h3 id="Youtube-字幕设置"><a href="#Youtube-字幕设置" class="headerlink" title="Youtube 字幕设置"></a>Youtube 字幕设置</h3><p>下载浏览器扩展</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>地址</th>
</tr>
</thead>
<tbody><tr>
<td>YouTube™ 双字幕</td>
<td><a href="https://www.dual-subtitles.com/">https://www.dual-subtitles.com/</a></td>
</tr>
</tbody></table>
<h3 id="Youtube-效果图"><a href="#Youtube-效果图" class="headerlink" title="Youtube 效果图"></a>Youtube 效果图</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307260951329.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307260951328.webp"></p>
<p>希望大家喜欢！</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
  </entry>
  <entry>
    <title>PicGo + uPic + Github 搭建免费图床</title>
    <url>/2023/05/PicGouPicGithub.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>自从来到 xLog 就开始养成写博客的习惯，虽然 xLog 目前上传图片无限制也免费，但一直以来我使用的服务都养成了备份的习惯，也不怕跑路。对比了 Amazon S3 &amp; Cloudflare R2，感兴趣的可以看看 <a href="https://www.vantage.sh/blog/cloudflare-r2-aws-s3-comparison">R2 vs S3</a>，感觉 Cloudflare R2 性价比更高，还可以免费嫖 10 GB，但总怕背刺，我不考虑大陆 IP 访问问题，所以索性换成免费的 Github，要比稳定，谁能比过 Github？使用总之一句话：”有备无患”。</p>
<h3 id="Github-图库"><a href="#Github-图库" class="headerlink" title="Github 图库"></a>Github 图库</h3><h4 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h4><p>注册好 Github 帐号，新建仓库，仓库名记住。</p>
<h4 id="新建-token"><a href="#新建-token" class="headerlink" title="新建 token"></a>新建 token</h4><p>1&#x2F;点击个人——“设置”</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img@master/uPic/CleanShot%202023-05-20%20at%2010.35.21@2x.png" alt="CleanShot2023-05-20at10.35.21@2x"></p>
<p>2&#x2F;左边最下面选择” &lt;&gt;Developer settings “</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270949561.webp" alt="3"></p>
<p>3&#x2F;选择令牌 Tokens (classic)——Generate new token (classic)</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270949172.webp" alt="4"></p>
<p>4&#x2F;备注选填，一定勾选 repo</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270949943.webp" alt="5"></p>
<p>5&#x2F;复制好 token</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270950127.webp" alt="6"></p>
<p>以上，Github 图库仓库设置完成</p>
<hr>
<h3 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h3><h4 id="下载-PicGo"><a href="#下载-PicGo" class="headerlink" title="下载 PicGo"></a>下载 PicGo</h4><table>
<thead>
<tr>
<th align="left">项目</th>
<th align="left">地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">PicGo Github</td>
<td align="left"><a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a></td>
</tr>
<tr>
<td align="left">PicGo 下载</td>
<td align="left"><a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></td>
</tr>
</tbody></table>
<h4 id="设置-PicGo"><a href="#设置-PicGo" class="headerlink" title="设置 PicGo"></a>设置 PicGo</h4><p>打开 PicGo 设置，选择 Github 后编辑右边的配置文件</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270951296.webp"></p>
<p>填入第一步记下的仓库名（格式是 userame&#x2F;repo）和拷贝下来的 token，确定即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img@master/uPic/CleanShot%202023-05-20%20at%2013.27.35@2x.png" alt="CleanShot2023-05-20at13.27.35@2x"></p>
<hr>
<h3 id="uPic"><a href="#uPic" class="headerlink" title="uPic"></a>uPic</h3><h4 id="下载-uPic"><a href="#下载-uPic" class="headerlink" title="下载 uPic"></a>下载 uPic</h4><table>
<thead>
<tr>
<th align="left">项目</th>
<th align="left">地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">uPic&nbsp; Github</td>
<td align="left"><a href="https://github.com/gee1k/uPic">https://github.com/gee1k/uPic</a></td>
</tr>
<tr>
<td align="left">Homebrew</td>
<td align="left">brew install bigwig-club&#x2F;brew&#x2F;upic –cask</td>
</tr>
<tr>
<td align="left">Github Download</td>
<td align="left"><a href="https://github.com/gee1k/uPic/releases">https://github.com/gee1k/uPic/releases</a></td>
</tr>
</tbody></table>
<h4 id="配置-uPic"><a href="#配置-uPic" class="headerlink" title="配置 uPic"></a>配置 uPic</h4><p>在设置中选择图床，左下脚 + “Github”</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img@master/uPic/CleanShot%202023-05-20%20at%2013.43.20@2x.png" alt="CleanShot2023-05-20at13.43.20@2x"></p>
<blockquote>
<ul>
<li><code>用户名</code>: Github 用户名。例如：我的 Github 主页 <a href="https://github.com/gee1k">https://github.com/gee1k</a>，我的用户名就是 <code>gee1k</code></li>
<li><code>仓库名</code>: 需要储存上传文件的仓库名称。例如：我的仓库地址为 <a href="https://github.com/gee1k/oss">https://github.com/gee1k/oss</a>，仓库名称就是<code>oss</code></li>
<li><code>分支</code>: 分支名称，默认是<code>master</code>，如果是其他分支，就必须先创建好分支，才能上传</li>
<li><code>Token</code>: Github 的个人访问令牌（Personal access tokens）</li>
<li><code>域名</code>: 默认可不设置域名，会使用 Github 默认的访问地址。当你的仓库开启了 <code>pages</code> 功能，并配置好了自定义域名时，这里就可以使用你的自定义域名</li>
<li>—引用 <a href="https://blog.svend.cc/upic/tutorials/github/">https://blog.svend.cc/upic/tutorials/github/</a></li>
</ul>
</blockquote>
<p>保存即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img@master/uPic/CleanShot%202023-05-20%20at%2013.44.50@2x.png" alt="CleanShot2023-05-20at13.44.50@2x"></p>
<h4 id="jsDelivr-加速"><a href="#jsDelivr-加速" class="headerlink" title="jsDelivr 加速"></a>jsDelivr 加速</h4><p>需要 <code>jsdelivr</code> CDN 加速访问请勾选👇</p>
<p>链接将会变成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/geekbb/oss_img@×***</span><br></pre></td></tr></table></figure>



<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img@master/uPic/CleanShot%202023-05-20%20at%2013.44.30@2x.png" alt="CleanShot2023-05-20at13.44.30@2x"></p>
<hr>
<h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p>Typora 的配置更为简单，只要你配置好 PicGo，在 Typora 设置里选择 PicGo. app 即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img@master/uPic/CleanShot%202023-05-20%20at%2013.55.06@2x.png" alt="CleanShot2023-05-20at13.55.06@2x"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>分享 ChatGPT 自用 Prompt 区别于网络上大多数烂套路</title>
    <url>/2023/04/Prompt1.html</url>
    <content><![CDATA[<p><strong>吾自己所用之 Prompt，与今世之甚多俗套有区别，实乃倾尽心思所编，愿其能助大家于事业成就之路（章法不一，而定期有更新）</strong></p>
<h2 id="单词查询"><a href="#单词查询" class="headerlink" title="单词查询"></a>单词查询</h2><blockquote>
<p>{英语单词查询解释}</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">请对Text以表格返回：</span><br><span class="line">项目|结果</span><br><span class="line">翻译成英文</span><br><span class="line">国际音标</span><br><span class="line">词性</span><br><span class="line">词形</span><br><span class="line">中文解释</span><br><span class="line">词根词缀</span><br><span class="line">例句1(英-中)</span><br><span class="line">例句2</span><br><span class="line">例句3</span><br><span class="line">Text: <span class="string">&quot;&quot;</span><span class="string">&quot;&#123;&#123;&#125;&#125;&quot;</span><span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cloudflare-ipfs.com/ipfs/bafkreiarzugkshqfkk4nzieutghxk2aze64mkuat4tdzprlq32yodhvdpu"></p>
<hr>
<h2 id="英文例句"><a href="#英文例句" class="headerlink" title="英文例句"></a>英文例句</h2><blockquote>
<p>{查询中&#x2F;英词汇，返回 3 个例句附中文}</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">请对Text以表格返回：</span><br><span class="line">项目|结果</span><br><span class="line">英文</span><br><span class="line">例句1(英-中)</span><br><span class="line">例句2(英-中)</span><br><span class="line">例句3(英-中)</span><br><span class="line">Text: <span class="string">&quot;&quot;</span><span class="string">&quot;&#123;&#123;&#125;&#125;&quot;</span><span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cloudflare-ipfs.com/ipfs/bafkreicermbghs54w3njx3mspw4jd3whoo4rjqfbs5e6ddutx2cj7eilki"></p>
<hr>
<h2 id="汉字查询"><a href="#汉字查询" class="headerlink" title="汉字查询"></a>汉字查询</h2><blockquote>
<p>{查询汉字的拼音组词解释}</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">请对Text以表格返回：</span><br><span class="line">项目|结果</span><br><span class="line">拼音</span><br><span class="line">组词</span><br><span class="line">汉字解释</span><br><span class="line">例句</span><br><span class="line">Text: <span class="string">&quot;&quot;</span><span class="string">&quot;&#123;&#123;&#125;&#125;&quot;</span><span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cloudflare-ipfs.com/ipfs/bafkreifk3k23otoylokiyyhlhtot7c4byq37klltgsxozhmxdvzuvo5kju"></p>
<hr>
<h2 id="中英互译"><a href="#中英互译" class="headerlink" title="中英互译"></a>中英互译</h2><blockquote>
<p>{自动翻译目标语言}</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">translates  EN/CN,answer only.</span><br><span class="line">Text:<span class="string">&quot;&quot;</span><span class="string">&quot;&#123;&#123;&#125;&#125;&quot;</span><span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cloudflare-ipfs.com/ipfs/bafkreiatyzux3ecz3g74aimatzsvrveq432fbaysdtey4agod2vgxxgiqe"></p>
<hr>
<h2 id="古文解释"><a href="#古文解释" class="headerlink" title="古文解释"></a>古文解释</h2><blockquote>
<p>{自动翻译目标语言}</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">请对Text以表格返回：</span><br><span class="line">项目|结果</span><br><span class="line">拼音</span><br><span class="line">现代解释</span><br><span class="line">例句</span><br><span class="line">Text: <span class="string">&quot;&quot;</span><span class="string">&quot;&#123;&#123;&#125;&#125;&quot;</span><span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cloudflare-ipfs.com/ipfs/bafybeiginadrvksulfqsa2lt2pioc7kc5pb2w3zga5llkz5rctyxdswysq"></p>
<hr>
<h2 id="语言优化"><a href="#语言优化" class="headerlink" title="语言优化"></a>语言优化</h2><blockquote>
<p>{用简洁的语言整理这一段话，增加逻辑性，去掉错别字}</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">请改进Text的拼写、语法、清晰、简洁和整体可读性，同时分解长句，减少重复。只返回更正版本，避免解释。</span><br><span class="line">Text:<span class="string">&quot;&quot;</span><span class="string">&quot;&#123;&#123;&#125;&#125;&quot;</span><span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cloudflare-ipfs.com/ipfs/bafybeidndw5sj5apalwbskmj6qnge3ek2nkiv4slatq35socyutww5il5a"></p>
<hr>
<h2 id="Excel-函数生成器"><a href="#Excel-函数生成器" class="headerlink" title="Excel 函数生成器"></a>Excel 函数生成器</h2><blockquote>
<p>{根据描述生成函数}</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">将Text指令返回指定的excel函数：</span><br><span class="line">项目|结果</span><br><span class="line">Excel函数</span><br><span class="line">精简描述</span><br><span class="line">Text:<span class="string">&quot;&quot;</span><span class="string">&quot;&#123;&#123;&#125;&#125;&quot;</span><span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cloudflare-ipfs.com/ipfs/bafybeidk4dzk2cem5egtwifxpvbhbzll6o335t4qetqm3ypee6xsipa2hq"></p>
<hr>
<h2 id="生成标题"><a href="#生成标题" class="headerlink" title="生成标题"></a>生成标题</h2><blockquote>
<p>{复制&#x2F;粘贴您的页面内容并询问}<br>[配合 <a href="https://github.com/mckaywrigley/chatbot-ui">Chatbot-ui</a>使用，实现多变量 Prompt]</p>
</blockquote>
<p><code>生成&#123;&#123;生成几个&#125;&#125;个独特的标题标签，最多 60 个字符，用于Text。它们应该描述性并包含术语&quot;&#123;&#123;包含术语&#125;&#125;&quot;： Text:&quot;&quot;&quot;&#123;&#123;内容&#125;&#125;&quot;&quot;&quot;</code></p>
<p><img src="https://cloudflare-ipfs.com/ipfs/bafybeigxase52oxwjux5hvdfpzsonbfcn6pmjdauhtwdx3w4yrdawhpwfe"></p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>Prompt</tag>
      </tags>
  </entry>
  <entry>
    <title>从 macOS 到 iPhone 全面拥抱 RIME 输入法</title>
    <url>/2023/04/RIME.html</url>
    <content><![CDATA[<blockquote>
<p>中州韵输入法引擎是由佛振编写的开源中文输入法，目前项目网站、源代码均托管在 GitHub。基于同一个核心架构，该输入法分为三个官方发行版：Linux 发行版中州韵、Windows 发行版小狼毫、macOS 发行版鼠须管。— <a href="https://zh.wikipedia.org/zh-cn/%E4%B8%AD%E5%B7%9E%E9%9F%BB%E8%BC%B8%E5%85%A5%E6%B3%95%E5%BC%95%E6%93%8E">维基百科</a></p>
</blockquote>
<h2 id="我的看法"><a href="#我的看法" class="headerlink" title="我的看法"></a>我的看法</h2><h3 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h3><p>我是一名五笔输入法使用者，大约在 16 年接触到了中州韵输入法引擎，当时使用的是 Windows 发行版小狼毫。相比于搜狗输入法，这种输入法没有设置界面，全凭用户通过修改用户文件夹或程序文件夹里的 YAML 配置文件来客制化自己的输入法，在当时绝对是一股清流。后来，像大多数人一样，由于找不到各种功能的配置文件，入门即放弃。几年后，我断断续续地使用过，但总是感觉不得要领。</p>
<h3 id="转机"><a href="#转机" class="headerlink" title="转机"></a>转机</h3><p>直到最近，我看到一篇博文《<a href="https://ssnhd.com/2022/01/06/rime/">Rime Squirrel 鼠须管输入法配置详解</a>》，通读过才算正真了解了 RIME 输入法，就是博主的这张图彻底解决了我找不到各种配置文件目录的问题，我真心建议想用好 RIME 输入法的朋友仔细看看这篇博文，你一定会从中得到很多收获。</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261436637.webp"></p>
<ul>
<li>随即磨拳擦掌再次开始安装使用</li>
</ul>
<h2 id="入门到资深"><a href="#入门到资深" class="headerlink" title="入门到资深"></a>入门到资深</h2><h3 id="macOS-安装"><a href="#macOS-安装" class="headerlink" title="macOS 安装"></a>macOS 安装</h3><blockquote>
<p>macOS 安装<a href="https://rime.im/">鼠须管</a>，Windows 安装<a href="https://github.com/rime/weasel">小狼毫</a></p>
</blockquote>
<p>如果你是单独使用拼音&amp;五笔，大可用博文中的<a href="https://github.com/ssnhd/rime/archive/refs/heads/master.zip">配置</a>懒人包，覆盖自已配置即可，不必折腾</p>
<h3 id="五笔拼音混输"><a href="#五笔拼音混输" class="headerlink" title="五笔拼音混输"></a>五笔拼音混输</h3><p>如果你是五笔拼音混输使用者，那你可以使用我的<a href="https://github.com/geekbb/-RIME-geek/archive/refs/heads/main.zip">配置</a>文件覆盖使用，修改如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">📝default.custom.yaml👇</span><br><span class="line">* 五笔拼音混输设置为默认方案</span><br><span class="line">* 候选词数量 10</span><br><span class="line">📝pinyin_simp.schema.yaml👇</span><br><span class="line">* 模糊音纠错全开 (南方人福音)</span><br><span class="line">📝squirrel.custom.yaml👇</span><br><span class="line">* 后选字改为竖排</span><br><span class="line">* 字体设置为霞鹜文楷 </span><br><span class="line">* 候选字大小设置为28(更适合4K屏幕)</span><br><span class="line">* 集成皮肤N套（首推微信键盘皮肤“深浅”色）</span><br><span class="line">📝installation.yaml👇</span><br><span class="line">* 同步至 iCloud （文件夹RimeSync）</span><br><span class="line">📝wubi86_jidian_pinyin.schema.yaml👇</span><br><span class="line">*四码上屏。四码唯一时，自动上屏(影响拼音组字)</span><br></pre></td></tr></table></figure>
<ul>
<li>同步 iCloud 请打开 installation.yaml 将倒数二行 geek 改为你的 Mac 管理员名称“&#x2F;Users&#x2F;<font color="#ff0000">geek</font>&#x2F;Library&#x2F;Mobi……”</li>
<li>霞鹜文楷字体下载 <a href="https://github.com/lxgw/LxgwWenKai">https://github.com/lxgw/LxgwWenKai</a></li>
</ul>
<h3 id="皮肤效果"><a href="#皮肤效果" class="headerlink" title="皮肤效果"></a>皮肤效果</h3><blockquote>
<p>首选皮肤”微信键盘皮肤”，香不香！</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261436636.webp"></p>
<blockquote>
<p>另外几套皮肤 (借用博主的图)</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261436638.webp"></p>
<h3 id="词库管理推荐"><a href="#词库管理推荐" class="headerlink" title="词库管理推荐"></a>词库管理推荐</h3><blockquote>
<p>管理 #Rime #五笔 词库的工具，可添加、删除、批量导入外部词条、批量生成指定版本的五笔编码，支持 macOS Windows Ubuntu 多个平台</p>
</blockquote>
<p><a href="https://github.com/KyleBing/wubi-dict-editor">五笔码表助手 for Rime</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261436639.webp"></p>
<p>可以看到，拼音词库是 65116，五笔词库是 89271，还不够造吗？，有了这个词库工具，自己造吧<br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261436640.webp"></p>
<ul>
<li>这不比微信输入法强？顺嘴一提，为了您的隐私，真心不建议国内用户安装微信输入法。</li>
</ul>
<h3 id="iPhone-安装"><a href="#iPhone-安装" class="headerlink" title="iPhone 安装"></a>iPhone 安装</h3><table>
<thead>
<tr>
<th align="left">项目</th>
<th align="left">地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><div>仓输入法</div></td>
<td align="left"><a href="https://github.com/imfuxiao/Hamster">https://github.com/imfuxiao/Hamster</a></td>
</tr>
<tr>
<td align="left">App Store</td>
<td align="left"><a href="https://apps.apple.com/cn/app/%E4%BB%93%E8%BE%93%E5%85%A5%E6%B3%95/id6446617683?itsct=apps_box_badge&itscg=30200">https://apps.apple.com/cn/app/%E4%BB%93%E8%BE%93%E5%85%A5%E6%B3%95/id6446617683?itsct=apps_box_badge&amp;itscg=30200</a></td>
</tr>
</tbody></table>
<blockquote>
<p><strong>仓输入法</strong> 经过几次迭代，已经很完备了，推荐使用。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261436641.webp"></p>
<h3 id="iPhone-拼音方案"><a href="#iPhone-拼音方案" class="headerlink" title="iPhone 拼音方案"></a>iPhone 拼音方案</h3><blockquote>
<p>只推荐<a href="https://github.com/iDvel/rime-ice">雾凇拼音</a>，将<a href="https://github.com/iDvel/rime-ice">雾凇拼音</a>打包下载解压重命名为 Rime</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261436642.webp"></p>
<h3 id="输入方案上传"><a href="#输入方案上传" class="headerlink" title="输入方案上传"></a>输入方案上传</h3><blockquote>
<p>打开网页，将原来的 Rime 方案删除，上传雾凇拼音包，注意文件夹还是要命名为 Rime </p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261436643.webp"></p>
<blockquote>
<p>选择雾凇拼音，然后重新部署即可。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261436644.webp"></p>
<blockquote>
<p>切记不要打开配色方案，相信我，用自带的主题，又快又简洁！</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261436645.webp"></p>
<ul>
<li>模糊音请修改 <code>rime_ice.schema.yaml</code> 文件</li>
</ul>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>这篇文章适用于那些既会打五笔，但又忘记某些字根需要拼音辅助的朋友。希望这篇文章能对你们有所帮助， (没错，说的就是我！)</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>App 输入法</tag>
      </tags>
  </entry>
  <entry>
    <title>618 RSSHub 订阅《什么值得买》榜单分享</title>
    <url>/2023/06/RSSHub.html</url>
    <content><![CDATA[<blockquote>
<p>618 快到了，大家有什么购买计划？如何还没有，不妨订阅我分享的《什么值得买》各类榜单、史底、卷活动😁，把手拿出来，我们一起剁。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271631747.webp"></p>
<h3 id="什么值得买"><a href="#什么值得买" class="headerlink" title="什么值得买"></a>什么值得买</h3><p>《什么值得买》网站只提供了五个频道 RSS</p>
<p>订阅链接：<a href="https://www.smzdm.com/dingyue">https://www.smzdm.com/dingyue</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271631748.webp"></p>
<h3 id="什么值得买-RSSHub"><a href="#什么值得买-RSSHub" class="headerlink" title="什么值得买 + RSSHub"></a>什么值得买 + RSSHub</h3><p>以下 Rss 订阅链接是结合 <code>万物皆可 RSS</code> 的 <a href="https://docs.rsshub.app/">RSSHub</a> 打造</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271631749.webp"></p>
<h4 id="RSSHub-由路《什么值得买》"><a href="#RSSHub-由路《什么值得买》" class="headerlink" title="RSSHub 由路《什么值得买》"></a>RSSHub 由路《什么值得买》</h4><p>RSSHub&#x2F;购物&#x2F;什么值得买 <a href="https://docs.rsshub.app/shopping.html#shen-me-zhi-de-mai">https://docs.rsshub.app/shopping.html#shen-me-zhi-de-mai</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271631750.webp"></p>
<p>该页面提供非常详细的《什么值得买》RSS 定制频道方法，这里我分享几个自用了频道，大家可以举一反三，客制化自己喜欢的订阅频道。</p>
<hr>
<h4 id="好价类"><a href="#好价类" class="headerlink" title="好价类"></a>好价类</h4><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271631751.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271631752.webp"></p>
<blockquote>
<p>好价电商榜 - 券活动 -24 小时 <a href="https://rsshub.app/smzdm/ranking/dianshang/24/24">https://rsshub.app/smzdm/ranking/dianshang/24/24</a></p>
</blockquote>
<blockquote>
<p>好价电商榜 - 天猫 -24 小时 <a href="https://rsshub.app/smzdm/ranking/dianshang/25/24">https://rsshub.app/smzdm/ranking/dianshang/25/24</a></p>
</blockquote>
<blockquote>
<p>好价电商榜 - 京东 -24 小时 <a href="https://rsshub.app/smzdm/ranking/dianshang/23/24">https://rsshub.app/smzdm/ranking/dianshang/23/24</a></p>
</blockquote>
<blockquote>
<p>好价品类榜 - 全部 -3 小时 <a href="https://rsshub.app/smzdm/ranking/pinlei/11/3">https://rsshub.app/smzdm/ranking/pinlei/11/3</a></p>
</blockquote>
<blockquote>
<p>好价品类榜 - 电脑数码 -24 小时 <a href="https://rsshub.app/smzdm/ranking/pinlei/13/24">https://rsshub.app/smzdm/ranking/pinlei/13/24</a></p>
</blockquote>
<blockquote>
<p>好价品类榜 - 运动户外 -24 小时 <a href="https://rsshub.app/smzdm/ranking/pinlei/14/24">https://rsshub.app/smzdm/ranking/pinlei/14/24</a></p>
</blockquote>
<hr>
<h4 id="文章类"><a href="#文章类" class="headerlink" title="文章类"></a>文章类</h4><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271631753.webp"></p>
<blockquote>
<p>好文榜 - 资讯 -24 小时 <a href="https://rsshub.app/smzdm/ranking/haowen/zx/24">https://rsshub.app/smzdm/ranking/haowen/zx/24</a></p>
</blockquote>
<blockquote>
<p>好文榜 - 原创 -24 小时 <a href="https://rsshub.app/smzdm/ranking/haowen/yc/24">https://rsshub.app/smzdm/ranking/haowen/yc/24</a></p>
</blockquote>
<blockquote>
<p>今日热门 - 什么值得买好文 <a href="https://rsshub.app/smzdm/haowen/1">https://rsshub.app/smzdm/haowen/1</a></p>
</blockquote>
<blockquote>
<p>周热门 - 什么值得买好文 <a href="https://post.smzdm.com/hot_7">https://post.smzdm.com/hot_7</a></p>
</blockquote>
<blockquote>
<p>月热门 - 什么值得买好文 <a href="https://post.smzdm.com/hot_30">https://post.smzdm.com/hot_30</a></p>
</blockquote>
<hr>
<h4 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h4><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271631754.webp"></p>
<blockquote>
<p>历史低价 - 什么值得买 <a href="https://rsshub.app/smzdm/keyword/%E5%8E%86%E5%8F%B2%E4%BD%8E%E4%BB%B7">https://rsshub.app/smzdm/keyword/%E5%8E%86%E5%8F%B2%E4%BD%8E%E4%BB%B7</a></p>
</blockquote>
<blockquote>
<p>电脑数码 - 什么值得买 <a href="https://rsshub.app/smzdm/keyword/%E7%94%B5%E8%84%91%E6%95%B0%E7%A0%81">https://rsshub.app/smzdm/keyword/%E7%94%B5%E8%84%91%E6%95%B0%E7%A0%81</a></p>
</blockquote>
<blockquote>
<p>运动户外 - 什么值得买 <a href="https://rsshub.app/smzdm/keyword/%E8%BF%90%E5%8A%A8%E6%88%B7%E5%A4%96">https://rsshub.app/smzdm/keyword/%E8%BF%90%E5%8A%A8%E6%88%B7%E5%A4%96</a></p>
</blockquote>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>RSS</tag>
      </tags>
  </entry>
  <entry>
    <title>124 元实现最佳性价比双千兆软路由 OpenWrt</title>
    <url>/2023/05/Routeropenwrt.html</url>
    <content><![CDATA[<blockquote>
<p>本文所有配件均来至二手闲鱼，无任何推广成份，只是技术分享</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271019416.webp"></p>
<h3 id="购入"><a href="#购入" class="headerlink" title="购入"></a>购入</h3><p>这台我家云是我在 2020 年在闲鱼上以 85 元购得的。当时卖家已经刷好了 omv，我打算将其用作一个轻量级 NAS。随着片片越来越多，一个硬盘的 NAS 空间已经捉襟见肘，慢慢就搁置仓库。</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271019417.webp"></p>
<p>没想到三年过去了，价格居然没有多大变化，相比 N1 R2S 那个炒得老高的溢价，不知道好多少倍</p>
<h3 id="软路由需求"><a href="#软路由需求" class="headerlink" title="软路由需求"></a>软路由需求</h3><p>最近有一个使用软路由的场景需求，要求不高，我决定从仓库里拿出我家云刷成 OpenWrt, 此外，它还有一个 USB 3.0 接口，于是我在闲鱼上以 39 元收购了一个绿联 USB 千兆网卡，实现了双千兆软路由，真正的最佳性价比</p>
<p>总价 85+39&#x3D;124 元，还要什么自行车。</p>
<h3 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h3><p>CPU RK3328  eMMC 8G 的储存空间  1G 内存</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271019418.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271019419.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271019420.webp"></p>
<p>做一个软路由足够了，平时还跑一两个 docker 也是没有问题</p>
<h3 id="关于刷机"><a href="#关于刷机" class="headerlink" title="关于刷机"></a>关于刷机</h3><p>刷机视频在 YouTube 和 B 站有一大把，大家可以参考，只是额外需要用双 USB 公头刷机，建议大家不要单独购买 (节省成本到极致)，直接和我一样，随便找两根四芯 USB 充电线，自己接上就 OK。</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271019421.webp"></p>
<h3 id="固件选择"><a href="#固件选择" class="headerlink" title="固件选择"></a>固件选择</h3><h4 id="高大全就选恩山论坛的-flippy"><a href="#高大全就选恩山论坛的-flippy" class="headerlink" title="高大全就选恩山论坛的 flippy  +"></a>高大全就选恩山论坛的 flippy  +</h4><p>集成 N 多功能，USB 网卡驱动也无优</p>
<p><a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&tid=4076037&highlight=%E6%88%91%E5%AE%B6%E4%BA%91">https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=4076037&amp;highlight=%E6%88%91%E5%AE%B6%E4%BA%91</a></p>
<p>电报群下载地址，我家云固件的英文叫 <code>L1pro</code></p>
<p><a href="https://t.me/openwrt_flippy">https://t.me/openwrt_flippy</a></p>
<hr>
<h4 id="自己制定-OpenWrt-固件-supes"><a href="#自己制定-OpenWrt-固件-supes" class="headerlink" title="自己制定 OpenWrt 固件 supes"></a>自己制定 OpenWrt 固件 supes</h4><p><a href="https://supes.top/">https://supes.top/</a> </p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271019422.webp"></p>
<p>需要什么功能自己选，免费只支持 5 个，不过已经够用了，集成了 <a href="https://op.supes.top/packages/aarch64_cortex-a53">https://op.supes.top/packages/aarch64_cortex-a53</a> 软件仓库，后期可以在 OpenWrt 里面自行安装</p>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>我家云相关介绍文章除了在恩山论坛，&lt;什么值得买&gt;里面也有，所以大家想了解得更详细，更多的玩法，可以搜索看看。现在它做为一个合格的过墙的软路由，性能已是绰绰有余。<br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271019423.webp"><br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271019424.webp"><br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271019425.webp"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>OpenWrt</tag>
        <tag>软路由</tag>
      </tags>
  </entry>
  <entry>
    <title>用 Rust 命令行一键打包网页生成桌面 App</title>
    <url>/2023/04/Rustapp.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">项目地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Pake</td>
<td align="left"><a href="https://github.com/tw93/Pake">https://github.com/tw93/Pake</a></td>
</tr>
</tbody></table>
<blockquote>
<p>支持 Mac &#x2F; Windows &#x2F; Linux，关于 <a href="https://github.com/tw93/Pake/blob/master/README_CN.md#%E5%B8%B8%E7%94%A8%E5%8C%85%E4%B8%8B%E8%BD%BD">常用包下载</a>、<a href="https://github.com/tw93/Pake/blob/master/README_CN.md#%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%80%E9%94%AE%E6%89%93%E5%8C%85">命令行一键打包</a>、<a href="https://github.com/tw93/Pake/blob/master/README_CN.md#%E5%AE%9A%E5%88%B6%E5%BC%80%E5%8F%91">定制开发</a> 可见下面文档，也欢迎去 <a href="https://github.com/tw93/Pake/discussions">讨论区</a> 交流。</p>
</blockquote>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a><strong>特征</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">🎐 相比传统的 Electron 套壳打包，要小将近 20 倍，5M 上下。</span><br><span class="line">🚀 Pake 的底层使用的 Rust Tauri 框架，性能体验较 JS 框架要轻快不少，内存小很多。</span><br><span class="line">📦 不是单纯打包，实现了快捷键的透传、沉浸式的窗口、拖动、样式改写、去广告、产品的极简风格定制。</span><br><span class="line">👻 只是一个很简单的小玩具，用 Rust 替代之前套壳网页打包的老思路，其实 PWA 也很好。</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="打包-xLog-个人主页"><a href="#打包-xLog-个人主页" class="headerlink" title="打包 xLog 个人主页"></a><strong>打包 xLog 个人主页</strong></h2><h3 id="创建虚拟环境："><a href="#创建虚拟环境：" class="headerlink" title="创建虚拟环境："></a><strong>创建虚拟环境：</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 -m venv myenv</span><br></pre></td></tr></table></figure>


<h3 id="激活虚拟环境："><a href="#激活虚拟环境：" class="headerlink" title="激活虚拟环境："></a><strong>激活虚拟环境：</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">source myenv/<span class="built_in">bin</span>/activate</span><br></pre></td></tr></table></figure>


<h3 id="使用-npm-进行安装"><a href="#使用-npm-进行安装" class="headerlink" title="使用 npm 进行安装"></a><strong>使用 npm 进行安装</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g pake-cli</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261323792.webp"></p>
<h3 id="查找-Pake-安装路径"><a href="#查找-Pake-安装路径" class="headerlink" title="查找 Pake 安装路径"></a><strong>查找 Pake 安装路径</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm bin -g</span><br></pre></td></tr></table></figure>


<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261323793.webp"></p>
<h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a><strong>编辑配置文件</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano ~/.bash_profile</span><br></pre></td></tr></table></figure>


<h3 id="添加-PATH-环境变量"><a href="#添加-PATH-环境变量" class="headerlink" title="添加 PATH 环境变量"></a><strong>添加 PATH 环境变量</strong></h3><blockquote>
<p> 在文件末尾添加以下行：(地址可能不一)</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/Users/geek/.npm-packages/bin</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261323794.webp"></p>
<p>按下 <code>Ctrl</code> 键和 <code>X</code> 键，然后 <code>Y</code>，保存退出。</p>
<h3 id="重新加载-Bash-配置文件"><a href="#重新加载-Bash-配置文件" class="headerlink" title="重新加载 Bash 配置文件"></a><strong>重新加载 Bash 配置文件</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>

<h3 id="生成桌面应用"><a href="#生成桌面应用" class="headerlink" title="生成桌面应用"></a><strong>生成桌面应用</strong></h3><blockquote>
<p> 就用我的 xLog 主页小试 (第一次运行很慢，后面就好了)</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pake https://x.geekbb.ml --name Geek --transparent</span><br></pre></td></tr></table></figure>

<p><code>*如遇见 rustc 错误请看最后</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261323795.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261323796.webp"></p>
<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a><strong>效果图</strong></h3><p><code>GIF加载中……</code><br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261323797.gif"></p>
<hr>
<p>不过默认图标也是醉了，随便找一个 JPG 转 ICNS 网站</p>
<p>👉<a href="https://www.aconvert.com/cn/image/jpg-to-icns/">JPG 转 ICNS - 在线转换图像文件 (aconvert.com)</a></p>
<blockquote>
<ul>
<li>MacOS 下必须为 <code>.icns</code></li>
<li>Windows 下必须为 <code>.ico</code></li>
<li>Linux 下必须为 <code>.png</code></li>
</ul>
</blockquote>
<h3 id="换默认图标"><a href="#换默认图标" class="headerlink" title="换默认图标"></a><strong>换默认图标</strong></h3><p>后面加：<code>--icon &lt;path&gt;</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pake https://x.geekbb.ml --name Geek --transparent --icon /Users/geek/Documents/123/Geek.icns</span><br></pre></td></tr></table></figure>


<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261323798.webp"></p>
<hr>
<h2 id="打包-Chatbot-UI"><a href="#打包-Chatbot-UI" class="headerlink" title="打包 Chatbot UI"></a><strong>打包 <a href="https://x.geekbb.ml/Github-Chatbot-ui">Chatbot UI</a></strong></h2><blockquote>
<p><a href="https://x.geekbb.ml/Github-Chatbot-ui">Chatbot UI 部署在本地</a>，正好可以打包，免得每次输入网址</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pake http://192.168.2.100:3000 --name Chatbot --transparent --icon /Users/geek/Documents/123/chatgpt.icns</span><br></pre></td></tr></table></figure>

<h3 id="效果图-1"><a href="#效果图-1" class="headerlink" title="效果图"></a><strong>效果图</strong></h3><p><code>GIF加载中……</code><br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261323799.gif"></p>
<hr>
<blockquote>
<p>如果遇见 zsh: command not found: rustc 错误👇</p>
</blockquote>
<ul>
<li>打开终端并依次执行以下命令：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv 1.2 -sSf https://sh.rustup.rs | sh</span><br></pre></td></tr></table></figure>

<ul>
<li>打开终端，输入以下命令打开终端的配置文件：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano ~/.zshrc</span><br></pre></td></tr></table></figure>
<ul>
<li>在打开的文件末尾添加以下代码：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$HOME</span>/.cargo/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<ol>
<li><p>这个命令将 <code>$HOME/.cargo/bin</code> 添加到 PATH 环境变量中。</p>
</li>
<li><p>按下 <code>Control + X</code>，然后按下 <code>Y</code> 保存更改并退出。</p>
</li>
<li><p>输入以下命令更新终端的配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>App</tag>
      </tags>
  </entry>
  <entry>
    <title>欧洲 Scaleway 年付 40RMB VPS IPV6 搭梯评测</title>
    <url>/2023/10/Scaleway.html</url>
    <content><![CDATA[<p><code>#2023年10月9日更新</code></p>
<p><code>法国巴黎1C1G10GB &lt;融合怪测试&gt;</code></p>
<p><code>SSH改密码登录</code></p>
<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>故事开始于：</p>
<ul>
<li>《<a href="https://hupan.li/1442.html">Scaleway 星辰 40 元 1 年 1C1G10G 的 IPV6 小鸡</a>》 </li>
<li>《<a href="https://hupan.li/1469.html">Scaleway 星辰 IPV6 小鸡的各种抠门进阶玩法</a>》</li>
<li>《<a href="https://www.wrnxr.cn/1945.html">Scaleway 超低价小鸡开机教程</a>》</li>
</ul>
<p> 1C1G10G 100M 带宽 无限流量 荷兰阿姆斯特丹小鸡到手 (建议严格参考上面教程使用脚本开机)</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310061938971.webp"></p>
<h3 id="为-Scaleway-纯-IPV6-添加-IPV4（WARP）"><a href="#为-Scaleway-纯-IPV6-添加-IPV4（WARP）" class="headerlink" title="为 Scaleway 纯 IPV6 添加 IPV4（WARP）"></a>为 Scaleway 纯 IPV6 添加 IPV4（WARP）</h3><ul>
<li>使用 <a href="https://gitlab.com/fscarmen/warp#warp-go-%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC">Fscarmen&#x2F;warp</a>  warp-go 脚本添加 IPV4 支持，方便访问 IPV4 内容。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310061953605.webp"></p>
<h3 id="开启-BBR"><a href="#开启-BBR" class="headerlink" title="开启 BBR"></a>开启 BBR</h3><ul>
<li>不用折腾内核了 (我给你们避坑了)，直接开启原生 BBR (Debian 12)</li>
<li>同时适用于 ipv4&#x2F;ipv6</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure>

<ul>
<li>生效</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>

<ul>
<li>验证 (如果有 bbr 说明已开启)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure>

<h3 id="SSH-改密码登录"><a href="#SSH-改密码登录" class="headerlink" title="SSH 改密码登录"></a>SSH 改密码登录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改密码</span></span><br><span class="line">passwd</span><br><span class="line"><span class="comment">#修改sshd_config配置文件</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#找到以下选项把#去掉改成yes保存</span></span><br><span class="line">PermitRootLogin <span class="built_in">yes</span></span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br><span class="line">PasswordAuthentication <span class="built_in">yes</span></span><br><span class="line"><span class="comment">#重启sshd</span></span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="跑分测试"><a href="#跑分测试" class="headerlink" title="跑分测试"></a>跑分测试</h3><h4 id="小鸡概况-国际组测速"><a href="#小鸡概况-国际组测速" class="headerlink" title="小鸡概况 + 国际组测速"></a>小鸡概况 + 国际组测速</h4><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310061944990.webp"></p>
<h4 id="国内组测速-1（荷兰）"><a href="#国内组测速-1（荷兰）" class="headerlink" title="国内组测速 1（荷兰）"></a>国内组测速 1（荷兰）</h4><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310061945343.webp"></p>
<h4 id="国内组测速-1（法国巴黎节点）"><a href="#国内组测速-1（法国巴黎节点）" class="headerlink" title="国内组测速 1（法国巴黎节点）"></a>国内组测速 1（法国巴黎节点）</h4><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310142112875.png"></p>
<h4 id="国内组测速-2"><a href="#国内组测速-2" class="headerlink" title="国内组测速 2"></a>国内组测速 2</h4><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310061948128.webp"></p>
<ul>
<li>这明显已超过 100M 带宽</li>
</ul>
<h3 id="搭建梯子-Vless-Reality-Hysteria2-并存"><a href="#搭建梯子-Vless-Reality-Hysteria2-并存" class="headerlink" title="搭建梯子 Vless_Reality + Hysteria2 并存"></a>搭建梯子 Vless_Reality + Hysteria2 并存</h3><h4 id="八合一脚本"><a href="#八合一脚本" class="headerlink" title="八合一脚本"></a>八合一脚本</h4><ul>
<li>使用 <a href="https://www.v2ray-agent.com/archives/1682491479771">mack-a 一键脚本</a> 5-1 【<a href="https://www.v2ray-agent.com/upload/wk/reality_install-nyfr.jpg">图片参考</a>】</li>
</ul>
<h4 id="Hysteria2"><a href="#Hysteria2" class="headerlink" title="Hysteria2"></a>Hysteria2</h4><ul>
<li>部署 <a href="https://www.igeekbb.com/2023/09/hysteria.html#%E9%83%A8%E7%BD%B2-Hysteria2">Hysteria2</a></li>
</ul>
<h3 id="不同协议测速"><a href="#不同协议测速" class="headerlink" title="不同协议测速"></a>不同协议测速</h3><h4 id="speed-cloudflare-com"><a href="#speed-cloudflare-com" class="headerlink" title="speed.cloudflare.com"></a>speed.cloudflare.com</h4><h5 id="vless-reality-vision"><a href="#vless-reality-vision" class="headerlink" title="vless_reality_vision"></a>vless_reality_vision</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310062008947.webp"></p>
<h5 id="vless-reality-grpc"><a href="#vless-reality-grpc" class="headerlink" title="vless_reality_grpc"></a>vless_reality_grpc</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310062009828.webp"></p>
<h5 id="Hysteria2-1"><a href="#Hysteria2-1" class="headerlink" title="Hysteria2"></a>Hysteria2</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310062010123.webp"></p>
<hr>
<h4 id="fast-com"><a href="#fast-com" class="headerlink" title="fast.com"></a>fast.com</h4><h5 id="vless-reality-vision-1"><a href="#vless-reality-vision-1" class="headerlink" title="vless_reality_vision"></a>vless_reality_vision</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310062013055.png"></p>
<h5 id="vless-reality-grpc-1"><a href="#vless-reality-grpc-1" class="headerlink" title="vless_reality_grpc"></a>vless_reality_grpc</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310062015092.webp"></p>
<h5 id="Hysteria2-2"><a href="#Hysteria2-2" class="headerlink" title="Hysteria2"></a>Hysteria2</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310062016362.webp"></p>
<h4 id="YouTubu"><a href="#YouTubu" class="headerlink" title="YouTubu"></a>YouTubu</h4><h5 id="vless-reality-grpc-和-vless-reality-vision"><a href="#vless-reality-grpc-和-vless-reality-vision" class="headerlink" title="vless_reality_grpc 和 vless_reality_vision"></a>vless_reality_grpc 和 vless_reality_vision</h5><ul>
<li>1080P 勉强观看，懒得截图了</li>
</ul>
<h5 id="Hysteria2-3"><a href="#Hysteria2-3" class="headerlink" title="Hysteria2"></a>Hysteria2</h5><ul>
<li>全体起立！这是 100M ?</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310062017878.webp"></p>
<hr>
<h4 id="iPhone-小火箭全局"><a href="#iPhone-小火箭全局" class="headerlink" title="iPhone+ 小火箭全局"></a>iPhone+ 小火箭全局</h4><ul>
<li>上传速度被南方联通焊死，请忽略。</li>
</ul>
<h5 id="vless-reality-grpc-2"><a href="#vless-reality-grpc-2" class="headerlink" title="vless_reality_grpc"></a>vless_reality_grpc</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310062052948.webp"></p>
<h5 id="vless-reality-vision-2"><a href="#vless-reality-vision-2" class="headerlink" title="vless_reality_vision"></a>vless_reality_vision</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310062054341.webp"></p>
<h5 id="Hysteria2-4"><a href="#Hysteria2-4" class="headerlink" title="Hysteria2"></a>Hysteria2</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310062055569.webp"></p>
<hr>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>一定要有 IPV6 环境，可参考《<a href="https://youtu.be/dQ1AMXAiEJk?si=NPbCWG7G1ugZVfa5">不良林</a>》《<a href="https://youtu.be/xj3bJRPzr8Y?si=F6koC_jMmseLEGR2">韩风 Talk</a>》IPV6 开通教程</li>
<li>可建梯子，vless_reality_grpc 和 vless_reality_vision 协议勉强可用，Hysteria2 直接起飞。</li>
<li>Hysteria2 由于被运营商阻断或限速严重，需使用端口跳跃，可参考《<a href="https://www.igeekbb.com/2023/09/Hysteria2Port.html">对抗 QoS 阻断&amp;限速 Hysteria2 端口跳跃设置</a>》注：需将 iptables 命令替换为 ip6tables。</li>
<li><del>IPV6 端口跳跃无法使用</del>  已有大佬点拨搞定【<a href="https://github.com/apernet/hysteria/issues/629">参考</a>】(Scaleway 对使用 Hysteria2&#x2F;UDP 态度未知，有被封风险)</li>
<li>40RMB 一年 100M 带宽无限流量小鸡，套上 WARP 可玩性很高，确实值得折腾。我跑两个轻 Docker&#x2F;备用梯子，很满足。</li>
<li>以上链接整理全了，基本上可以说是入手 Scaleway 的懒人包，折腾挂了就删机重开，大家玩得开心。</li>
</ul>
<hr>
<h3 id="法国巴黎-1C1G10GB-测试"><a href="#法国巴黎-1C1G10GB-测试" class="headerlink" title="法国巴黎 1C1G10GB 测试"></a>法国巴黎 1C1G10GB 测试</h3><p> 短链：<br>    <a href="http://paste.spiritlhl.net/u/yqTG2D.txt">http://paste.spiritlhl.net/u/yqTG2D.txt</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310091913245.png"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>VPS</tag>
        <tag>IPV6</tag>
      </tags>
  </entry>
  <entry>
    <title>我把使用多年的哪吒监控换成了 ServerStatus-Rust</title>
    <url>/2023/05/ServerStatusRust.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><blockquote>
<p>当使用一个东西太久，就会出现审美疲劳，<a href="https://nezha.wiki/">哪吒监控</a>使用多年，倒是也没有掉过链子，搭建也方便，监控项目中规中矩，报警通知也很好配置，非常适合普通用户。不过生命在于折腾，我就喜欢不断尝试新的事物。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270959977.webp"></p>
<p>很久以前就看中 ServerStatus 监控面板，感觉就是简洁过头，没有后台，对小白来说搭建也不是太友好，最近发现 Rust 版 ServerStatus 云探针，<code>ServerStatus</code> 威力加强版，保持轻量和简单部署，也支持显示三网 ping 值和丢包率，这样一来，也可以把部署的 smokeping 给删除了</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307282050843.avif"></p>
<h3 id="搭建-ServerStatus-Rust"><a href="#搭建-ServerStatus-Rust" class="headerlink" title="搭建 ServerStatus-Rust"></a>搭建 ServerStatus-Rust</h3><table>
<thead>
<tr>
<th align="left">项目</th>
<th align="left">主页</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Github</td>
<td align="left"><a href="https://github.com/zdz/ServerStatus-Rust">https://github.com/zdz/ServerStatus-Rust</a></td>
</tr>
<tr>
<td align="left">说明文档</td>
<td align="left"><a href="https://doc.ssr.rs/">https://doc.ssr.rs/</a></td>
</tr>
</tbody></table>
<h4 id="快速部署服务端"><a href="#快速部署服务端" class="headerlink" title="快速部署服务端"></a>快速部署服务端</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /opt/ServerStatus &amp;&amp; <span class="built_in">cd</span> /opt/ServerStatus</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -qO one-touch.sh <span class="string">&#x27; https://raw.githubusercontent.com/zdz/ServerStatus-Rust/master/one-touch.sh &#x27;</span></span><br><span class="line">bash -ex one-touch.sh</span><br></pre></td></tr></table></figure>

<p>部署完毕，打开 <a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a> 或 http:&#x2F;&#x2F;&lt;你的IP&gt;: 8080&#x2F;</p>
<p>服务端配置文件在&#x2F;opt&#x2F;ServerStatus&#x2F;config.toml, 可按需修改。参考：<a href="https://doc.ssr.rs/rapid_deploy/">https://doc.ssr.rs/rapid_deploy/</a></p>
<hr>
<h4 id="一键部署客户端"><a href="#一键部署客户端" class="headerlink" title="一键部署客户端"></a>一键部署客户端</h4><p>部署好你的 Server 后，请自行替换下面的 <strong><code>ssr.rs</code></strong> 为你的域名，我是使用 NginxProxyManager 反代了服务端 IP，顺便套上 ssl</p>
<p>不同的主机可以运行相同的命令注册到同一组</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSLf <span class="string">&quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;alias=$ (hostname)&quot;</span> | bash</span><br></pre></td></tr></table></figure>


<p>安装并启用 vnstat，细节参见 <a href="https://doc.ssr.rs/vnstat">https://doc.ssr.rs/vnstat</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSLf <span class="string">&quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;vnstat=1&amp;alias=$ (hostname)&quot;</span> | bash</span><br></pre></td></tr></table></figure>

<p>指定 month rotate 为 7 号</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSLf <span class="string">&quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;vnstat=1&amp;vnstat-mr=7&amp;alias=$ (hostname)&quot;</span> | bash</span><br></pre></td></tr></table></figure>


<p>指定位置 &amp; 类型 (我一般用这个)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSLf <span class="string">&quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;alias=$ (hostname)&amp;type=arm&amp;loc=home&quot;</span> | bash</span><br></pre></td></tr></table></figure>


<p>安装并将这台 vps 置顶显示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSLf <span class="string">&quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;weight=10000&amp;alias=$ (hostname)&quot;</span> | bash</span><br></pre></td></tr></table></figure>


<p>自定义 ping 地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSLf <span class="string">&quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;alias=$ (hostname)&amp;cm=cm. Abc. Com: 80&quot;</span> | bash</span><br></pre></td></tr></table></figure>


<p>调试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSLf <span class="string">&quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;vnstat=0&amp;alias=$ (hostname)&quot;</span> &gt; ssr-client-init. Sh</span><br><span class="line">Bash -x ssr-client-init. Sh</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="ServerStatus-常用命令"><a href="#ServerStatus-常用命令" class="headerlink" title="ServerStatus 常用命令"></a>ServerStatus 常用命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 启动</span><br><span class="line">systemctl start stat_server</span><br><span class="line">systemctl start stat_client</span><br><span class="line"></span><br><span class="line"># 状态查看</span><br><span class="line">systemctl status stat_server</span><br><span class="line">systemctl status stat_client</span><br><span class="line"></span><br><span class="line"># 使用以下命令开机自启</span><br><span class="line">systemctl enable stat_server</span><br><span class="line">systemctl enable stat_client</span><br><span class="line"></span><br><span class="line"># 停止</span><br><span class="line">systemctl stop stat_server</span><br><span class="line">systemctl stop stat_client</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270959885.webp"></p>
<hr>
<h3 id="Telegram-警告通知"><a href="#Telegram-警告通知" class="headerlink" title="Telegram 警告通知"></a>Telegram 警告通知</h3><p><a href="https://doc.ssr.rs/notification/">https://doc.ssr.rs/notification/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://core.telegram.org/bots/api</span></span><br><span class="line"><span class="comment"># https://jinja.palletsprojects.com/en/3.0.x/templates/#if</span></span><br><span class="line">[tgbot]</span><br><span class="line"><span class="comment"># 开关 true 打开</span></span><br><span class="line">Enabled = <span class="literal">false</span></span><br><span class="line">bot_token = <span class="string">&quot;&lt;tg bot token&gt;&quot;</span></span><br><span class="line">chat_id = <span class="string">&quot;&lt;chat id&gt;&quot;</span></span><br><span class="line"><span class="comment"># host 可用字段参见 payload. Rs 文件 HostStat 结构, &#123;&#123;host.xxx&#125;&#125; 为占位变量</span></span><br><span class="line"><span class="comment"># 例如 host. Name 可替换为 host. Alias，大家根据自己的喜好来编写通知消息</span></span><br><span class="line"><span class="comment"># &#123;&#123;ip_info.query&#125;&#125; 主机 ip,  &#123;&#123;sys_info.host_name&#125;&#125; 主机 hostname</span></span><br><span class="line">title = <span class="string">&quot;❗&lt;b&gt;Server Status&lt;/b&gt;&quot;</span></span><br><span class="line">online_tpl =  <span class="string">&quot; &#123;&#123;config.title&#125;&#125; \n😆 &#123;&#123;host.location&#125;&#125; &#123;&#123;host.name&#125;&#125; 主机恢复上线啦&quot;</span></span><br><span class="line">offline_tpl = <span class="string">&quot; &#123;&#123;config.title&#125;&#125; \n😱 &#123;&#123;host.location&#125;&#125; &#123;&#123;host.name&#125;&#125; 主机已经掉线啦&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom 模板置空则停用自定义告警，只保留上下线通知</span></span><br><span class="line">Custom_tpl = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&#123;% if host. Memory_used / host. Memory_total &gt; 0.5  %&#125;</span></span><br><span class="line"><span class="string">&lt;pre&gt;😲 &#123;&#123;host.name&#125;&#125; 主机内存使用率超 50%, 当前 &#123;&#123; (100 * host.memory_used / host.memory_total) | round &#125;&#125; %  &lt;/pre&gt;</span></span><br><span class="line"><span class="string">&#123;% endif %&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;% if host. Hdd_used / host. Hdd_total  &gt; 0.5  %&#125;</span></span><br><span class="line"><span class="string">&lt;pre&gt;😲 &#123;&#123;host.name&#125;&#125; 主机硬盘使用率超 50%, 当前 &#123;&#123; (100 * host.hdd_used / host.hdd_total) | round &#125;&#125; % &lt;/pre&gt;</span></span><br><span class="line"><span class="string">&#123;% endif %&#125;</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>VPS，监控</tag>
      </tags>
  </entry>
  <entry>
    <title>Siri 接入 ChatGPT 之捷径</title>
    <url>/2023/04/SiriChatGPT.html</url>
    <content><![CDATA[<p>ChatGPT 之 Siri 捷径道甚为广传，常之甚烂大街而已，余在此惟推一款、自用最實、最简洁，期眾皆喜之！</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>地址</th>
</tr>
</thead>
<tbody><tr>
<td>Hey GPT</td>
<td><a href="https://www.icloud.com/shortcuts/8bcc2979d6e34a3d90a48c3f77f96d68">https://www.icloud.com/shortcuts/8bcc2979d6e34a3d90a48c3f77f96d68</a></td>
</tr>
<tr>
<td>来源</td>
<td><a href="https://twitter.com/mckaywrigley/status/1640414764852711425">https://twitter.com/mckaywrigley/status/1640414764852711425</a></td>
</tr>
</tbody></table>
<p><strong>&gt; 打开相机扫一扫，添加 Hey GPT 捷径</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251529088.webp"></p>
<p>此 Siri 捷径是由<a href="https://twitter.com/mckaywrigley">Mckay Wrigley</a>制作</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251529089.webp"></p>
<p>他为此录了一个视频<br><a href="https://twitter.com/i/status/1640414764852711425">https://twitter.com/i/status/1640414764852711425</a></p>
<hr>
<p>当然，我还是喜欢通过呼出 Hey Siri 然后说 Hey GPT 来调用，效率高了不少</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251529090.webp"></p>
<p>进入捷径，将朗读改为你想要的名字</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251529091.webp"></p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
      </tags>
  </entry>
  <entry>
    <title>看了三天抖音广告，终于把这套壁纸拔下来了</title>
    <url>/2023/04/Wallpaper.html</url>
    <content><![CDATA[<blockquote>
<p>😍 这套手机壁纸太仙了，大爱！<br>😂 看 50 秒广告下载一张图。谁懂啊，家人们。<br>🎉 喜欢直接拿去，欢迎分享！</p>
</blockquote>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261428042.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261428043.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261428044.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261428045.webp"></p>
<hr>
<h2 id="壁纸下载"><a href="#壁纸下载" class="headerlink" title="壁纸下载"></a>壁纸下载</h2><table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">项目地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">阿里云盘</td>
<td align="left"><a href="https://www.aliyundrive.com/s/E3CTMocykXE">https://www.aliyundrive.com/s/E3CTMocykXE</a></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>壁纸</tag>
      </tags>
  </entry>
  <entry>
    <title>入手搬瓦工 CN2 GIA 特别限量版</title>
    <url>/2023/09/bandwagonhost.html</url>
    <content><![CDATA[<h3 id="入手"><a href="#入手" class="headerlink" title="入手"></a>入手</h3><p>2023 年 9 月 13 日，搬瓦工 $46&#x2F;年 CN2 GIA 特别限量版开卖，看介绍机房可选日本软银，对于南方联通还是很不错的，随即入手一台玩玩，以下是该小鸡测试相关参数，仅供大家参考。</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309141955380.webp"></p>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309141906013.webp"></p>
<h3 id="网速测试"><a href="#网速测试" class="headerlink" title="网速测试"></a>网速测试</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309141906011.png"></p>
<h4 id="家宽：南方联通-200M"><a href="#家宽：南方联通-200M" class="headerlink" title="家宽：南方联通 200M"></a>家宽：南方联通 200M</h4><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309141906007.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309141906008.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309142018988.webp"></p>
<h3 id="Ping"><a href="#Ping" class="headerlink" title="Ping"></a>Ping</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309142024298.png"></p>
<h3 id="流媒体解锁"><a href="#流媒体解锁" class="headerlink" title="流媒体解锁"></a>流媒体解锁</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309141906012.webp"></p>
<h3 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309141906010.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309141959999.webp"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>相对于搬瓦工自家产品线来说，还是很有性价比的一台 VPS，日本软银对联通的延迟、速度都很不错。只是 500M 内存差点意思，用来富强倒也足够，流量只有 500G 有点遗憾，传家宝谈不上，物有所值吧。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>本地部署免费的  GPT3.5 和 GPT4</title>
    <url>/2023/04/gpt4free.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">项目地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">gpt 4 free</td>
<td align="left"><a href="https://github.com/xtekky/gpt4free">https://github.com/xtekky/gpt4free</a></td>
</tr>
</tbody></table>
<h2 id="官方介绍"><a href="#官方介绍" class="headerlink" title="官方介绍"></a>官方介绍</h2><blockquote>
<p>去中心化 AI 产业，通过几个反向工程的 API（poe.com、phind.com、chat.openai.com 等）提供免费的 GPT-4&#x2F;3.5 脚本。</p>
</blockquote>
<h2 id="在线访问"><a href="#在线访问" class="headerlink" title="在线访问"></a>在线访问</h2><p><a href="https://chat.chatbot.sex/chat">https://chat.chatbot.sex/chat</a> 包括 gpt-4、网络访问和类似于 gpt-jailbreak 的 DAN 模型</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261038826.webp"></p>
<h2 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h2><h3 id="下载代码包"><a href="#下载代码包" class="headerlink" title="下载代码包"></a>下载代码包</h3><p>打开 <a href="https://github.com/xtekky/chatgpt-clone">xtekky&#x2F;chatgpt-clone</a></p>
<p>下载压缩包并解压</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261038823.webp"></p>
<h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><p>首先，打开终端，进入上面解压包所在文件夹，运行下面命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -m venv myenv</span><br></pre></td></tr></table></figure>


<h3 id="激活虚拟环境"><a href="#激活虚拟环境" class="headerlink" title="激活虚拟环境"></a>激活虚拟环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> myenv/bin/activate</span><br></pre></td></tr></table></figure>

<h3 id="更新-pip"><a href="#更新-pip" class="headerlink" title="更新 pip"></a>更新 pip</h3><blockquote>
<p>如果提示要更新</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install --upgrade pip</span><br></pre></td></tr></table></figure>

<h3 id="安装-flask"><a href="#安装-flask" class="headerlink" title="安装 flask"></a>安装 flask</h3><p>(需富强)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install flask</span><br></pre></td></tr></table></figure>

<h3 id="安装-requests"><a href="#安装-requests" class="headerlink" title="安装 requests"></a>安装 requests</h3><p>(需富强)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure>


<h3 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 run.py</span><br></pre></td></tr></table></figure>


<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261038824.webp"></p>
<hr>
<p>打开 <a href="http://127.0.0.1:1337/">http://127.0.0.1:1337</a><br>(需富强)<br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261038825.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261038822.webp"></p>
<hr>
<p>请且用且珍惜……</p>
<p>4 月 23 日更新：已撸坏，再观察吧……</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307261038827.webp"></p>
<h2 id="安装-python3"><a href="#安装-python3" class="headerlink" title="安装 python3"></a>安装 python3</h2><p>您可以尝试重新安装 pip 3 以确保它已正确安装。在终端中输入以下命令以卸载旧版本的 pip 3：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove python3-pip</span><br></pre></td></tr></table></figure>

<p>然后使用以下命令安装最新版本的 pip 3：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install python3-pip</span><br></pre></td></tr></table></figure>

<p>如果 pip 3 已成功安装，您可以通过输入以下命令来验证它：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 --version</span><br></pre></td></tr></table></figure>

<p>如果您仍然无法找到 pip 3，请尝试使用以下命令手动安装它：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python3-setuptools</span><br><span class="line">sudo easy_install3 pip</span><br></pre></td></tr></table></figure>



<p>将手动安装 pip 3 并将其添加到系统路径中。您现在应该能够在终端中使用 pip 3 命令了。</p>
<ol>
<li>打开终端并输入以下命令：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Which pip 3</span><br></pre></td></tr></table></figure>


<pre><code>这将输出 pip 的安装路径，例如：
</code></pre>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/local/bin/pip 3</span><br></pre></td></tr></table></figure>


<ol start="2">
<li>将 pip 的安装路径添加到系统的环境变量中。您可以通过编辑您的 bashrc 文件来实现这一点。在终端中输入以下命令：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Echo <span class="string">&#x27;export PATH=&quot;/path/to/python/bin:$PATH&quot;&#x27;</span> &gt;&gt; ~/. Bashrc</span><br></pre></td></tr></table></figure>
<p>注意，你需要将上述命令中的“&#x2F;path&#x2F;to&#x2F;python&#x2F;bin”替换为 Python 的实际安装路径。</p>
<ol start="3">
<li>重新加载 bashrc 文件以使更改生效：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Source ~/. Bashrc</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
      </tags>
  </entry>
  <entry>
    <title>Hysteria2 &amp; VLESS-gRPC-uTLS-REALITY 对比测试</title>
    <url>/2023/09/hysteria.html</url>
    <content><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>起因我在 9 月 13 日购买了 <a href="https://www.igeekbb.com/2023/09/bandwagonhost.html">搬瓦工 CN2 GIA 特别限量版</a>  年付 300 多元，香是确实香，但我没有注意月 500G 流量是双向计费，实际就是 250G，对于我来说是远远不够。随即和搬瓦工协商退款，经过几番邮件拉扯，搬瓦工表示虽然我满足 30 天内退款政策，但流量已使用超过 1&#x2F;10，所以不给我退款。（上一篇评测时消耗了 100G）</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309181956806.webp"></p>
<h3 id="加持-Oracle-甲骨文云"><a href="#加持-Oracle-甲骨文云" class="headerlink" title="加持 Oracle 甲骨文云"></a>加持 Oracle 甲骨文云</h3><p>于是只能把我的真 • 传家宝 Oracle 甲骨文云日本拿出来当当备胎，鉴于甲骨文日本节点网络常年处于残废状态，完全不能使用。正好 不良林 最新一期视频 <a href="https://youtu.be/CXj-ID33MhU?si=7PMkMhJx__GumTre">使用 Hysteria2 歇斯底里来拯救垃圾 VPS</a>，尝试一下看看能不能让甲骨文垃圾线路焕发第二春。</p>
<h4 id="Oracle-甲骨文云日本→-南方联通"><a href="#Oracle-甲骨文云日本→-南方联通" class="headerlink" title="Oracle 甲骨文云日本→ 南方联通"></a>Oracle 甲骨文云日本→ 南方联通</h4><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309182008419.webp"></p>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>部署完 Hysteria V2 后先来看一看效果：</p>
<ul>
<li>同一台 VPS(甲骨文日本)</li>
<li>同一视频测速</li>
<li>Hysteria2 &amp; VLESS-gRPC-uTLS-REALITY 两种协议</li>
<li>两个时间段测试</li>
</ul>
<h4 id="2023-年-9-月-18-日-12-10-测试"><a href="#2023-年-9-月-18-日-12-10-测试" class="headerlink" title="2023 年 9 月 18 日 12:10 测试"></a>2023 年 9 月 18 日 12:10 测试</h4><p><strong>VLESS-gRPC-uTLS-REALITY</strong></p>
<h5 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309182018655.webp"></h5><p><strong>Hysteria2</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309182018654.webp"></p>
<hr>
<h4 id="2023-年-9-月-18-日-19-30-晚高峰-测试（十倍？？）"><a href="#2023-年-9-月-18-日-19-30-晚高峰-测试（十倍？？）" class="headerlink" title="2023 年 9 月 18 日 19:30(晚高峰) 测试（十倍？？）"></a>2023 年 9 月 18 日 19:30(晚高峰) 测试（十倍？？）</h4><p><strong>VLESS-gRPC-uTLS-REALITY</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309182023452.webp"></p>
<p><strong>Hysteria2</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309182025229.webp"></p>
<hr>
<p><strong>VLESS-gRPC-uTLS-REALITY</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309182026782.webp"></p>
<p><strong>Hysteria2</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309182028601.webp"></p>
<hr>
<p><strong>VLESS-gRPC-uTLS-REALITY</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309182028676.webp"></p>
<p><strong>Hysteria2</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309182029055.webp"></p>
<p>效果真是惊人，简直满血复活了！当搬瓦工备胎足也。</p>
<p>总结：有客户端条件的朋友可以直接上，垃圾线路 VPS 更是无需犹豫！</p>
<h3 id="部署-Hysteria2"><a href="#部署-Hysteria2" class="headerlink" title="部署 Hysteria2"></a>部署 <a href="https://v2.hysteria.network/zh/">Hysteria2</a></h3><p>不良林 的视频教程已相当详细，按需操作即可 <a href="https://youtu.be/CXj-ID33MhU?si=O9rHNhcN7x06ttCL">https://youtu.be/CXj-ID33MhU?si=O9rHNhcN7x06ttCL</a></p>
<p>下面把视频教程相关文档搬运过来方便大家</p>
<h4 id="第一步-一键安装-Hysteria2"><a href="#第一步-一键安装-Hysteria2" class="headerlink" title="第一步 一键安装 Hysteria2"></a>第一步 一键安装 Hysteria2</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -fsSL https://get.hy2.sh/)</span><br></pre></td></tr></table></figure>

<h4 id="第二步-生成自签证书"><a href="#第二步-生成自签证书" class="headerlink" title="第二步 生成自签证书"></a>第二步 生成自签证书</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl req -x509 -nodes -newkey ec:&lt;(openssl ecparam -name prime256v1) -keyout /etc/hysteria/server.key -out /etc/hysteria/server.crt -subj <span class="string">&quot;/CN=bing.com&quot;</span> -days 36500 &amp;&amp; sudo <span class="built_in">chown</span> hysteria /etc/hysteria/server.key &amp;&amp; sudo <span class="built_in">chown</span> hysteria /etc/hysteria/server.crt</span><br></pre></td></tr></table></figure>

<h4 id="第三步-服务器配置文件"><a href="#第三步-服务器配置文件" class="headerlink" title="第三步 服务器配置文件"></a>第三步 服务器配置文件</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span> <span class="string">&gt;</span> <span class="string">/etc/hysteria/config.yaml</span></span><br><span class="line"><span class="attr">listen:</span> <span class="string">:443</span> <span class="comment">#监听端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用 CA 证书</span></span><br><span class="line"><span class="comment">#acme:</span></span><br><span class="line"><span class="comment">#  domains:</span></span><br><span class="line"><span class="comment">#    - a.com #你的域名，需要先解析到服务器 ip</span></span><br><span class="line"><span class="comment">#  email: test@sharklasers.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用自签证书</span></span><br><span class="line"><span class="comment">#tls:</span></span><br><span class="line"><span class="comment">#  cert: /etc/hysteria/server.crt</span></span><br><span class="line"><span class="comment">#  key: /etc/hysteria/server.key</span></span><br><span class="line"></span><br><span class="line"><span class="attr">auth:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">password</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456</span> <span class="comment">#设置认证密码</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">masquerade:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">proxy</span></span><br><span class="line">  <span class="attr">proxy:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://bing.com</span> <span class="comment">#伪装网址</span></span><br><span class="line">    <span class="attr">rewriteHost:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h4 id="服务器相关指令"><a href="#服务器相关指令" class="headerlink" title="服务器相关指令"></a>服务器相关指令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启动Hysteria2</span></span><br><span class="line">systemctl start hysteria-server.service</span><br><span class="line"><span class="comment">#重启Hysteria2</span></span><br><span class="line">systemctl restart hysteria-server.service</span><br><span class="line"><span class="comment">#查看Hysteria2状态</span></span><br><span class="line">systemctl status hysteria-server.service</span><br><span class="line"><span class="comment">#停止Hysteria2</span></span><br><span class="line">systemctl stop hysteria-server.service</span><br><span class="line"><span class="comment">#设置开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> hysteria-server.service</span><br><span class="line"><span class="comment">#查看日志</span></span><br><span class="line">journalctl -u hysteria-server.service</span><br></pre></td></tr></table></figure>

<h4 id="客户端配置文件"><a href="#客户端配置文件" class="headerlink" title="客户端配置文件"></a>客户端配置文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server: ip:443</span><br><span class="line">auth: 123456</span><br><span class="line"></span><br><span class="line">bandwidth:</span><br><span class="line">  up: 20 mbps</span><br><span class="line">  down: 100 mbps</span><br><span class="line">  </span><br><span class="line">tls:</span><br><span class="line">  sni: a.com</span><br><span class="line">  insecure: <span class="literal">false</span> <span class="comment">#使用自签时需要改成true</span></span><br><span class="line"></span><br><span class="line">socks5:</span><br><span class="line">  listen: 127.0.0.1:1080</span><br><span class="line">http:</span><br><span class="line">  listen: 127.0.0.1:8080</span><br></pre></td></tr></table></figure>

<h4 id="sing-box-配置文件-Android-IOS"><a href="#sing-box-配置文件-Android-IOS" class="headerlink" title="sing-box 配置文件 (Android&#x2F;IOS)"></a>sing-box 配置文件 (Android&#x2F;IOS)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;dns&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;servers&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;cf&quot;</span>,</span><br><span class="line">        <span class="string">&quot;address&quot;</span>: <span class="string">&quot;https://1.1.1.1/dns-query&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">        <span class="string">&quot;address&quot;</span>: <span class="string">&quot;223.5.5.5&quot;</span>,</span><br><span class="line">        <span class="string">&quot;detour&quot;</span>: <span class="string">&quot;direct&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;block&quot;</span>,</span><br><span class="line">        <span class="string">&quot;address&quot;</span>: <span class="string">&quot;rcode://success&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;rules&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;geosite&quot;</span>: <span class="string">&quot;category-ads-all&quot;</span>,</span><br><span class="line">        <span class="string">&quot;server&quot;</span>: <span class="string">&quot;block&quot;</span>,</span><br><span class="line">        <span class="string">&quot;disable_cache&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;outbound&quot;</span>: <span class="string">&quot;any&quot;</span>,</span><br><span class="line">        <span class="string">&quot;server&quot;</span>: <span class="string">&quot;local&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;geosite&quot;</span>: <span class="string">&quot;cn&quot;</span>,</span><br><span class="line">        <span class="string">&quot;server&quot;</span>: <span class="string">&quot;local&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;strategy&quot;</span>: <span class="string">&quot;ipv4_only&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;inbounds&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;tun&quot;</span>,</span><br><span class="line">      <span class="string">&quot;inet4_address&quot;</span>: <span class="string">&quot;172.19.0.1/30&quot;</span>,</span><br><span class="line">      <span class="string">&quot;auto_route&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;strict_route&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&quot;sniff&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;outbounds&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;hysteria2&quot;</span>,</span><br><span class="line">      <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;proxy&quot;</span>,</span><br><span class="line">      <span class="string">&quot;server&quot;</span>: <span class="string">&quot;ip&quot;</span>,</span><br><span class="line">      <span class="string">&quot;server_port&quot;</span>: 443,</span><br><span class="line">      <span class="string">&quot;up_mbps&quot;</span>: 20,</span><br><span class="line">      <span class="string">&quot;down_mbps&quot;</span>: 100,</span><br><span class="line">      <span class="string">&quot;password&quot;</span>: <span class="string">&quot;123456&quot;</span>,</span><br><span class="line">      <span class="string">&quot;tls&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;enabled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;server_name&quot;</span>: <span class="string">&quot;a.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;insecure&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;direct&quot;</span>,</span><br><span class="line">      <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;direct&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;block&quot;</span>,</span><br><span class="line">      <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;block&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;dns&quot;</span>,</span><br><span class="line">      <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;dns-out&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;route&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;rules&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;protocol&quot;</span>: <span class="string">&quot;dns&quot;</span>,</span><br><span class="line">        <span class="string">&quot;outbound&quot;</span>: <span class="string">&quot;dns-out&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;geosite&quot;</span>: <span class="string">&quot;cn&quot;</span>,</span><br><span class="line">        <span class="string">&quot;geoip&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;private&quot;</span>,</span><br><span class="line">          <span class="string">&quot;cn&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;outbound&quot;</span>: <span class="string">&quot;direct&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;geosite&quot;</span>: <span class="string">&quot;category-ads-all&quot;</span>,</span><br><span class="line">        <span class="string">&quot;outbound&quot;</span>: <span class="string">&quot;block&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;auto_detect_interface&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>从 NotionNext 转战 Hexo 博客记录</title>
    <url>/2023/07/notion2hexo.html</url>
    <content><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p> Geek 以前通过 <a href="https://github.com/tangly1024/NotionNext">NotionNext</a> 搭建博客，Vercel 托管，可惜 NotionNext 目前优化得还不是很好 (虽然作者很努力在更新)，随即想换一个轻博客程序。</p>
<p>NotionNext 的性能测试：</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307281210227.webp"></p>
<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>在众多轻博客程序，看中了 <a href="https://hexo.io/index.html">Hexo</a> ，主要是 <strong><a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly</a></strong> 主题一眼缘，最后选择了 <strong>Hexo</strong> 。作为麻瓜 (非程序员)，发奋自学三天 (中途有放弃)，基本完成了 Hexo 搭建 + 部署 Github + 图片 CDN ( jsdelivr ) + CSS 微调，达成全套白嫖，Hexo 性能也是出奇的好，很是满意！</p>
<p><a href="https://pagespeed.web.dev/">https://pagespeed.web.dev/</a> 测试</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307281224753.webp"></p>
<p><a href="https://www.google.com/chrome/">Google Chrome</a> </p>
<p>Lighthouse 桌面设备测试</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307281235917.webp"></p>
<p>Lighthouse 移动设备测试</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307281614284.webp"></p>
<h2 id="关于搭建-Hexo"><a href="#关于搭建-Hexo" class="headerlink" title="关于搭建 Hexo"></a>关于搭建 Hexo</h2><p>关于搭建中踩真是踩了不少坑，这里记录一些遇见问题后 Google，也找到一些不错的 Hexo 教程网站，分享给大家，方便今后有需要搭建 Hexo 的朋友自取。</p>
<ol>
<li><h3 id="Hexo-官方文档（推荐）"><a href="#Hexo-官方文档（推荐）" class="headerlink" title="Hexo 官方文档（推荐）"></a><a href="https://hexo.io/zh-cn/docs/">Hexo 官方文档</a>（推荐）</h3></li>
<li><h3 id="Markdown-简单世界（推荐）"><a href="#Markdown-简单世界（推荐）" class="headerlink" title="Markdown 简单世界（推荐）"></a><a href="https://wizardforcel.gitbooks.io/markdown-simple-world/content/0.html">Markdown 简单世界</a>（推荐）</h3></li>
<li><h3 id="使用-Hexo-从-0-到-1-搭建个人博客详细教程（推荐）"><a href="#使用-Hexo-从-0-到-1-搭建个人博客详细教程（推荐）" class="headerlink" title="使用 Hexo 从 0 到 1 搭建个人博客详细教程（推荐）"></a><a href="https://www.bmabk.com/index.php/post/82276.html">使用 Hexo 从 0 到 1 搭建个人博客详细教程</a>（推荐）</h3></li>
<li><h3 id="Butterfly-主题安装文档（Jerry）"><a href="#Butterfly-主题安装文档（Jerry）" class="headerlink" title="Butterfly 主题安装文档（Jerry）"></a><a href="https://butterfly.js.org/">Butterfly 主题安装文档</a>（Jerry）</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307281258166.webp"></p>
</li>
<li><h3 id="Butterfly-主题美化教程"><a href="#Butterfly-主题美化教程" class="headerlink" title="Butterfly 主题美化教程"></a><a href="https://butterfly.zhheo.com/">Butterfly 主题美化教程</a></h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307281301275.webp"></p>
</li>
<li><h3 id="Hexo-中-Buttefly-最新教程总览-偷掉月亮的阿硕"><a href="#Hexo-中-Buttefly-最新教程总览-偷掉月亮的阿硕" class="headerlink" title="Hexo 中 Buttefly 最新教程总览  (偷掉月亮的阿硕)"></a><a href="https://moonshuo.cn/posts/43310.html">Hexo 中 Buttefly 最新教程总览 </a> (偷掉月亮的阿硕)</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307281310713.webp"></p>
</li>
<li><h3 id="Butterfly-的魔改教程-（亦小封）"><a href="#Butterfly-的魔改教程-（亦小封）" class="headerlink" title="Butterfly 的魔改教程 （亦小封）"></a><a href="https://meuicat.com/tags/Butterfly%E4%B8%BB%E9%A2%98/">Butterfly 的魔改教程</a> （亦小封）</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307281319996.webp"></p>
</li>
<li><h3 id="Butterfly-主题功能介绍-一笔淡墨"><a href="#Butterfly-主题功能介绍-一笔淡墨" class="headerlink" title="Butterfly 主题功能介绍 (一笔淡墨)"></a><a href="https://xue65535.cn/2022/01/03/guide/Butterfly/">Butterfly 主题功能介绍</a> (一笔淡墨)</h3><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307281323656.webp"></p>
</li>
</ol>
<h2 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h2><p>在 <a href="https://www.spaceship.com/">Spaceship</a> 用促销代码 <strong><code>COM67 </code></strong> ，仅 1.79 刀购买到我心仪的 COM 域名，次年续费 8.98 刀，还能承受。</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307281326211.webp"></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>在 GitHub Pages 上部署 Hexo ,本以为墙内无法访问，没想到目前也是可以正常打开，实属意外之喜，免费又稳定的方案，完美。当然如果算上域名花费，首年 12.8 元，以后 64 元&#x2F;年（少喝几杯奶茶？）。</p>
<p><font color=#FF000 >好了，既来之则安之，以后好好做有趣的内容输出。谢谢大家看到这里，目前未开通评论，目前我只有 <a href="https://x.com/geekbb">Twitter</a>，有事可以上 X 交流。</font></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>用 Docker 将类 ChatGPT 官方服务部署到 OpenWrt 软路由</title>
    <url>/2023/05/pandora.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>在生活和板砖奔波两地，ChatGPT 官网又经常抽风，碰巧两地都有软路由 OpenWrt，所以我将 ChatGPT 部署到软路由上。两地的网关都是 192.168.2.1，再把软路由上的 ChatGPT 加入 Google Chrome 收藏夹，这样就能随时在两地快速访问。</p>
<h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><p>这次使用的是<a href="https://github.com/pengzhile/pandora">潘多拉 (Pandora)</a>，一个使用 Access Token 实现了网页版 ChatGPT 的开源项目。后端优化，绕过 Cloudflare，速度喜人。</p>
<table>
<thead>
<tr>
<th align="left">项目</th>
<th align="left">地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">潘多拉 (Pandora)</td>
<td align="left"><a href="https://github.com/pengzhile/pandora">https://github.com/pengzhile/pandora</a></td>
</tr>
<tr>
<td align="left">Access Token</td>
<td align="left"><a href="http://chat.openai.com/api/auth/session">http://chat.openai.com/api/auth/session</a></td>
</tr>
</tbody></table>
<p><code>Access Token</code> 有效期 <code>14</code> 天，期间访问<strong>不需要梯子</strong></p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h4><p>打开 OpenWrt 我使用的固件是 <a href="https://supes.top/">https://supes.top/</a> ，找到<code>系统</code>—<code>软件包</code>，点击更新列表</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009390.webp"></p>
<p>更新后分别安装：</p>
<ol>
<li><p>luci-lib-jsonc</p>
</li>
<li><p>luci-lib-docker</p>
</li>
<li><p>luci-app-dockerman</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009391.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009392.webp"></p>
<p>安装完成后就可以在左栏找到 Docker</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009393.webp"></p>
<p>下面的操作建议在 SSH 完成，OpenWrt 上操作 Docker 真难用！</p>
<p>使用 SSH 工具连接 OpenWrt 网关 192.168.2.1，用户名和密码就是 OpenWrt 的用户名和密码。推荐工具  <a href="https://github.com/electerm/electerm">electerm</a></p>
<h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull pengzhile/pandora</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009394.webp"></p>
<h4 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -e PANDORA_CLOUD=cloud -e PANDORA_SERVER=0.0.0.0:8899 -p 8899:8899 -d pengzhile/pandora</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009395.webp"></p>
<p>更多 Docker 环境变量请看： <a href="https://github.com/pengzhile/pandora/blob/master/doc/wiki.md#docker%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">pandora 环境变量</a></p>
<h4 id="获取-Access-Token"><a href="#获取-Access-Token" class="headerlink" title="获取 Access Token"></a>获取 Access Token</h4><ul>
<li><p>官方登录，然后访问 <a href="http://chat.openai.com/api/auth/session">这里</a> 拿 <code>Access Token</code> 有效期 <code>14</code> 天</p>
</li>
<li><p>也可以直接用 OpenAI 帐号登录<br>打开 http:&#x2F;&#x2F;网关:8899&#x2F;<br>我使用 <code>Access Token</code><br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009396.webp"></p>
</li>
</ul>
<p>搞定，使用 cloud 模式，和 ChatGPT 官网无异，聊天记录同步更新，比官网稳定快捷。</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009397.webp"></p>
<h3 id="设置开机启动-非必须"><a href="#设置开机启动-非必须" class="headerlink" title="设置开机启动 (非必须)"></a>设置开机启动 (非必须)</h3><ul>
<li><p>使用&#x2F;etc&#x2F;rc.local 文件来执行自定义的启动脚本</p>
</li>
<li><p>找到<code>/etc/rc.local</code>文件</p>
</li>
<li><p>在文件的末尾添加以下内容</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">/etc/init.d/dockerd restart <span class="comment"># 重启Docker服务</span></span><br><span class="line"><span class="built_in">sleep</span> 10 <span class="comment"># 等待10秒，确保Docker服务已启动 docker start my_container # 启动Docker容器</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009398.webp"></p>
<p>把上面的 docker start <code>my_container</code> 替换成 openwrt Docker 里的容器 ID 比如我的是 <code>3c3ab7807401</code><br>docker start <code>3c3ab7807401</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009399.webp"></p>
<ul>
<li>保存并关闭文件。</li>
</ul>
<p>授予<code>/etc/rc.local</code>文件执行权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /etc/rc.local</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307271009400.webp"></p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>Docker</tag>
        <tag>OpenWrt</tag>
      </tags>
  </entry>
  <entry>
    <title>PassWall 负载均衡 HAProxy 保姆级设置</title>
    <url>/2023/10/passwall-haproxy.html</url>
    <content><![CDATA[<h3 id="关于-HAProxy"><a href="#关于-HAProxy" class="headerlink" title="关于 HAProxy"></a>关于 HAProxy</h3><p>PassWall 自带了一个负载均衡 <a href="http://www.haproxy.org/">HAProxy</a> 功能，以前也折腾过，现在用也就轻车熟路了，目前使用 HAProxy 需要解决我两个痛点：</p>
<ul>
<li>搬瓦工 500G 流量</li>
<li>UDP 阻断严重</li>
</ul>
<p> OpenWrt 固件推荐 <a href="https://github.com/haiibo/OpenWrt">Haiibo</a> ，对于爱折腾的人来说，都有非常稳定的表现。</p>
<h3 id="HAProxy-设置"><a href="#HAProxy-设置" class="headerlink" title="HAProxy 设置"></a>HAProxy 设置</h3><h4 id="开启-HAProxy"><a href="#开启-HAProxy" class="headerlink" title="开启 HAProxy"></a>开启 HAProxy</h4><p>PassWall - 【<strong>负载均衡</strong>】- 开启负载均衡 </p>
<ul>
<li><p>设置用户名</p>
</li>
<li><p>设置密码</p>
</li>
<li><p>添加节点 (协议、端口、密码等尽量保持一致)</p>
</li>
<li><p>负载比重、模式根据自己需求设置</p>
</li>
<li><p>保存&amp;应用</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182251012.webp"></p>
<h4 id="进入-HAProxy"><a href="#进入-HAProxy" class="headerlink" title="进入 HAProxy"></a>进入 HAProxy</h4><ul>
<li>保存后进入界面 &amp; 路由地址:1188</li>
<li>密码用户名就是刚设置的</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182255441.webp"></p>
<ul>
<li>可以看到每个节点流量情况，说明已启动成功。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182256897.webp"></p>
<h4 id="新建负载均衡节点"><a href="#新建负载均衡节点" class="headerlink" title="新建负载均衡节点"></a>新建<strong>负载均衡</strong>节点</h4><ul>
<li>【<strong>节点列表</strong>】新建一个【Socks 负载均衡】如图</li>
<li>地址填 OpenWrt 路由地址</li>
<li>端口 1181</li>
<li>保存</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182258420.webp"></p>
<h4 id="套用负载均衡节点"><a href="#套用负载均衡节点" class="headerlink" title="套用负载均衡节点"></a>套用负载均衡节点</h4><ul>
<li>回到 PassWall【基本设置】</li>
<li>TCP 节点选择刚刚新建的【Socks 负载均衡】</li>
<li>【Socks 配置】也要新建一个【Socks 负载均衡】节点，端口 1081</li>
<li>保存并应用即可，进入 HAProxy 能看到流量在增加。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182301962.webp"></p>
<ul>
<li>也可以使用 PassWall 分流功能</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182307843.webp"></p>
<p>结束</p>
<hr>
<h3 id="Socks-套娃新玩法"><a href="#Socks-套娃新玩法" class="headerlink" title="Socks 套娃新玩法"></a>Socks 套娃新玩法</h3><p>折腾好上面，我发现就一个节点也可以做 Socks 套娃的玩法，见推 <a href="https://x.com/geekbb/status/1713820323274224118?s=20%EF%BC%8C%E4%B8%80%E8%88%AC%E6%9D%A5%E8%AF%B4%E6%88%91%E4%BB%AC%E4%BD%BF%E7%94%A8">https://x.com/geekbb/status/1713820323274224118?s=20，一般来说我们使用</a> PassWall 会直接使用节点或分流使用节点，但是如果使用本地 Socks 节点套一层梯子节点，我发现是对 UDP 流量阻断情况有所减轻的，甚至更快，大家可以设置试试：</p>
<h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><ul>
<li>【<strong>节点列表</strong>】里新建一个  Socks 套娃，如图</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182228436.webp"></p>
<ul>
<li>【<strong>基本设置</strong>】-【<strong>Socks 配置</strong>】如图：</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182230011.webp"></p>
<ul>
<li>在 TCP 节点中选择  [ Socks 套娃] ，下面<strong>Socks 配置</strong>启用，Socks 节点选择你的梯子节点即可</li>
</ul>
<p>下面上对比图</p>
<h5 id="直接使用节点"><a href="#直接使用节点" class="headerlink" title="直接使用节点"></a>直接使用节点</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182237476.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182243826.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182243279.webp"></p>
<h5 id="使用-Socks-套娃"><a href="#使用-Socks-套娃" class="headerlink" title="使用 Socks 套娃"></a>使用 Socks 套娃</h5><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182246766.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182247226.webp"></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310182248378.webp"></p>
<p>玩得愉快~</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>OpenWrt</tag>
        <tag>负载均衡</tag>
      </tags>
  </entry>
  <entry>
    <title>PassWall+MosDNS 分流设置</title>
    <url>/2023/09/passwall2mosdns.html</url>
    <content><![CDATA[<p>**<u>声明</u>**：这次仅仅我个人经验，因多年没有折腾 DNS，凭借以往设置 SmartDNS 的经验，加上又学习 MosDNS 插件基本设置，本着简单、高效、不易出错的原则，舍弃 MosDNS+Adgurad Home+PassWall 复杂套娃，只使用 PassWall+MosDNS 实现秒开网页和 4K  (梯子给力)。如发现有误或更好的配置，欢迎大家上推交流 <a href="https://x.com/geekbb/status/1707617265473257628?s=20">twitter</a></p>
<p>2023.10.6 更新：</p>
<ul>
<li>MosDNS 更新到 V5.2.1 <a href="https://x.com/geekbb/status/1709549373317898667?s=20">链接</a></li>
<li>将国内 DNS 服务器更换为 HTTPS</li>
<li>DNS 服务器并发数改为 2</li>
<li>启用 DNS 广告过滤</li>
<li>PassWall 勾选 ChinaDNS-NG</li>
</ul>
<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>前两天我 <a href="https://x.com/geekbb/status/1705860118452347383?s=20">Twitter</a> 上推荐的 OpenWrt 固件中自带有一款 DNS 插件：<a href="https://github.com/haiibo/OpenWrt">MosDNS</a>，在其官方 <a href="https://github.com/IrineSistiana/mosdns">Github</a> 上显示是 2020 年 11 月推出第一版，现在已经迭代到 v5.2.1，我发现此 DNS 转发器设置比 SmartDNS 简单太多。想到不良林这两期【<a href="https://youtu.be/TOhF5RcTGiM?si=OwPsyWM6pdNw54Yh">再谈 DNS 泄漏</a>】【<a href="https://youtu.be/fqREM6b25SY?si=VswEPtSfQQKy6mZg">进阶•DNS 泄漏篇</a>】，在当时并没有引起我的重视，心想泄漏就泄漏，你能把我怎么样，我们就是追求极致网速体验。现在想想确实天真了 (承德) 。既然能够通过技术避免一些不必要的麻烦，为什么不更好的保护自己呢，那下面记录一下我的设置流程。</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309291118344.webp" alt="不良林"></p>
<h3 id="MosDNS-设置"><a href="#MosDNS-设置" class="headerlink" title="MosDNS 设置"></a>MosDNS 设置</h3><h4 id="MosDNS-基本设置-基本选项"><a href="#MosDNS-基本设置-基本选项" class="headerlink" title="MosDNS 基本设置 - 基本选项"></a>MosDNS 基本设置 - 基本选项</h4><p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310061858121.webp"></p>
<h4 id="MosDNS-基本设置-高级选项"><a href="#MosDNS-基本设置-高级选项" class="headerlink" title="MosDNS 基本设置 - 高级选项"></a>MosDNS 基本设置 - 高级选项</h4><ul>
<li>如要启用 DNS 广告过滤，记得勾选最后一项</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310061859569.webp"></p>
<h3 id="PassWall-设置"><a href="#PassWall-设置" class="headerlink" title="PassWall 设置"></a>PassWall 设置</h3><h4 id="PassWall-DNS"><a href="#PassWall-DNS" class="headerlink" title="PassWall DNS"></a>PassWall DNS</h4><ul>
<li>远程 DNS 填写 <code>127.0.0.1:5335</code></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202310061859139.webp"></p>
<h3 id="OpenWrt-DHCP-设置"><a href="#OpenWrt-DHCP-设置" class="headerlink" title="OpenWrt DHCP 设置"></a>OpenWrt DHCP 设置</h3><h4 id="DHCP-DNS-基本设置"><a href="#DHCP-DNS-基本设置" class="headerlink" title="DHCP&#x2F;DNS 基本设置"></a>DHCP&#x2F;DNS 基本设置</h4><ul>
<li>查看 DNS 转发 是否为 <code>127.0.0.1#5335</code>（以上设置好后此处会自动变更，只需要核对。）</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309291137850.webp" alt="DHCP/DNS"></p>
<hr>
<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>以上设置完成后，再查询你的 DNS 泄漏<a href="https://ipleak.net/">https://ipleak.net/</a> 和 WebRTC 泄漏<a href="https://browserleaks.com/webrtc">https://browserleaks.com/webrtc</a> 如果没有中国 DNS，就基本搞定了。<strong>这只是最初阶入门玩法，要看高阶玩法和了解原理可参考不良林的几期 DNS 讲解视频。</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202309292030259.webp" alt="DNS"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>VPS</tag>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>快速获取 SSL 泛二级域名证书-acme.sh</title>
    <url>/2023/04/sslacme.html</url>
    <content><![CDATA[<h3 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h3><table>
<thead>
<tr>
<th>名称</th>
<th>地址</th>
</tr>
</thead>
<tbody><tr>
<td>acme.sh</td>
<td><a href="https://github.com/acmesh-official/acme.sh">https://github.com/acmesh-official/acme.sh</a></td>
</tr>
<tr>
<td>Cloudflare</td>
<td><a href="https://www.cloudflare.com/zh-cn/">https://www.cloudflare.com/zh-cn/</a></td>
</tr>
</tbody></table>
<hr>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote>
<p><strong>以下操作都是基于将域名的 NS 记录改成 Cloudlflare 的 NS，并由 Cloudflare 托管</strong></p>
</blockquote>
<h3 id="手动-DNS-验证方式"><a href="#手动-DNS-验证方式" class="headerlink" title="手动 DNS 验证方式"></a>手动 DNS 验证方式</h3><h4 id="一、安装-acme-sh"><a href="#一、安装-acme-sh" class="headerlink" title="一、安装 acme.sh"></a>一、安装 acme.sh</h4><ul>
<li>打开 SSH 输入以下命令安装 acme.sh（注：最后<span style="color:red">Email</span>地址改成你注册 Cloudflare 的邮箱）<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://get.acme.sh | sh -s email=my@example.com</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251500740.webp"></li>
</ul>
<hr>
<h4 id="二、运行脚本手动验证-DNS"><a href="#二、运行脚本手动验证-DNS" class="headerlink" title="二、运行脚本手动验证 DNS"></a>二、运行脚本手动验证 DNS</h4><ul>
<li>就以我的<code>198406.xyz</code> 来申请泛二级域名 (*.198406.xyz)SSL 证书，下面代码改成你自己的域名。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acme.sh --issue --dns -d &quot;*.198406.xyz&quot; --yes-I-know-dns-manual-mode-enough-go-ahead-please</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251500741.webp"></li>
</ul>
<p><span style="color:red">记录</span>上面的 Domain 和 TXT value 的所有值（<span style="color:yellow">黄色</span>字体部分）</p>
<hr>
<h4 id="三、Cloudflare-添加-TXT-解析"><a href="#三、Cloudflare-添加-TXT-解析" class="headerlink" title="三、Cloudflare 添加 TXT 解析"></a>三、Cloudflare 添加 TXT 解析</h4><p>*在 Cloudflare 管理域名添加 TXT 解析</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251500742.webp"></p>
<ul>
<li>等待 1 min 生效后</li>
</ul>
<hr>
<h4 id="四、运行申请脚本"><a href="#四、运行申请脚本" class="headerlink" title="四、运行申请脚本"></a>四、运行申请脚本</h4><ul>
<li><p><strong>（记得改成你自己的<span style="color:red">域名</span>）</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acme.sh --renew --dns -d &quot;*.198406.xyz&quot; --yes-I-know-dns-manual-mode-enough-go-ahead-please</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251500743.webp"></p>
</li>
<li><p>成功申请到*.198406.xyz 泛二级域名证书</p>
</li>
</ul>
<hr>
<h4 id="五、域名证书安全处理"><a href="#五、域名证书安全处理" class="headerlink" title="五、域名证书安全处理"></a>五、域名证书安全处理</h4><ul>
<li>将 pem 域名文件保存到&#x2F;root&#x2F;cert&#x2F;(改域名，文件目录要先建好)<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acme.sh --install-cert -d &quot;*.198406.xyz&quot; \ </span><br><span class="line">--key-file       /root/cert/key.pem  \</span><br><span class="line">--fullchain-file /root/cert/cert.pem \</span><br><span class="line">--reloadcmd     &quot;service nginx force-reload&quot;</span><br></pre></td></tr></table></figure></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251500744.webp"></p>
<hr>
<p>搞定<br><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307251500745.webp"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>域名证书</tag>
        <tag>SSL</tag>
      </tags>
  </entry>
  <entry>
    <title>个人搭梯过墙备忘录</title>
    <url>/2023/05/v2ray.html</url>
    <content><![CDATA[<h3 id="搭梯过墙三步走"><a href="#搭梯过墙三步走" class="headerlink" title="搭梯过墙三步走"></a>搭梯过墙三步走</h3><p>一台 VPS</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270934511.webp"></p>
<h4 id="重装系统-DD"><a href="#重装系统-DD" class="headerlink" title="重装系统 (DD)"></a>重装系统 (DD)</h4><h3 id="Linux-一键网络重装系统傻瓜版"><a href="#Linux-一键网络重装系统傻瓜版" class="headerlink" title="Linux 一键网络重装系统傻瓜版"></a><a href="https://www.939.me/1969.html">Linux 一键网络重装系统傻瓜版</a></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/installNET/master/Install.sh&quot;</span></span><br><span class="line"><span class="built_in">chmod</span> +x Install.sh</span><br><span class="line">./Install.sh</span><br></pre></td></tr></table></figure>

<ul>
<li>安装 Debian11 系统 -2-3</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270934512.webp"></p>
<hr>
<h4 id="更新系统-一键安装-curl-wget"><a href="#更新系统-一键安装-curl-wget" class="headerlink" title="更新系统&amp;一键安装 curl wget"></a>更新系统&amp;一键安装 curl wget</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y  &amp;&amp; apt upgrade -y &amp;&amp; apt install -y curl wget sudo</span><br></pre></td></tr></table></figure>


<h4 id="安装-BBR-网络加速脚本"><a href="#安装-BBR-网络加速脚本" class="headerlink" title="安装 BBR 网络加速脚本"></a>安装 BBR 网络加速脚本</h4><h3 id="最新内核-BBR-脚本卸载内核版本"><a href="#最新内核-BBR-脚本卸载内核版本" class="headerlink" title="最新内核 BBR 脚本卸载内核版本"></a><a href="https://github.com/ylx2016/Linux-NetSpeed/">最新内核 BBR 脚本卸载内核版本</a></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O tcp.sh <span class="string">&quot;https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcp.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure>

<ul>
<li>安装 BBR 原版内核 -1-11</li>
<li>安装 BBRplus 新版内核 -5-19</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270934513.webp"></p>
<hr>
<h4 id="安装代理"><a href="#安装代理" class="headerlink" title="安装代理"></a>安装代理</h4><h3 id="VLESS-TCP-Vision、Reality、gRPC-八合一共存脚本"><a href="#VLESS-TCP-Vision、Reality、gRPC-八合一共存脚本" class="headerlink" title="VLESS (TCP_Vision、Reality、gRPC 八合一共存脚本"></a><a href="https://github.com/mack-a/v2ray-agent">VLESS (TCP_Vision、Reality、gRPC 八合一共存脚本</a></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -P /root -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> 700 /root/install.sh &amp;&amp; /root/install.sh</span><br></pre></td></tr></table></figure>

<p><a href="https://www.v2ray-agent.com/archives/1682491479771">八合一一键脚本，快速搭建教程</a></p>
<ul>
<li>VLESS+TLS_Vision+TCP[推荐〕</li>
<li>VLESS+Realityt+uTLSt+Vision[推荐〕</li>
</ul>
<p>2-1-07</p>
<p><img src="https://cdn.jsdelivr.net/gh/geekbb/oss_img/202307270934514.webp"></p>
<hr>
<p>多说无益</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>VPS</tag>
        <tag>v2ray</tag>
      </tags>
  </entry>
</search>
